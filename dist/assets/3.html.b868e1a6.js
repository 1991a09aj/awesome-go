import{_ as i,r as p,o as l,c as u,a as n,b as a,w as t,d as s,e as r}from"./app.814033e1.js";const d={},k=n("h1",{id:"tcp\u7F16\u7A0B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tcp\u7F16\u7A0B","aria-hidden":"true"},"#"),s(" TCP\u7F16\u7A0B")],-1),v={class:"table-of-contents"},m=s("Go\u8BED\u8A00\u5B9E\u73B0TCP\u901A\u4FE1"),b=s("TCP\u534F\u8BAE"),f=s("TCP\u670D\u52A1\u7AEF"),h=s("TCP\u5BA2\u6237\u7AEF"),_=s("END \u94FE\u63A5"),g=r(`<h2 id="go\u8BED\u8A00\u5B9E\u73B0tcp\u901A\u4FE1" tabindex="-1"><a class="header-anchor" href="#go\u8BED\u8A00\u5B9E\u73B0tcp\u901A\u4FE1" aria-hidden="true">#</a> Go\u8BED\u8A00\u5B9E\u73B0TCP\u901A\u4FE1</h2><h3 id="tcp\u534F\u8BAE" tabindex="-1"><a class="header-anchor" href="#tcp\u534F\u8BAE" aria-hidden="true">#</a> TCP\u534F\u8BAE</h3><p>TCP/IP(Transmission Control Protocol/Internet Protocol) \u5373\u4F20\u8F93\u63A7\u5236\u534F\u8BAE/\u7F51\u95F4\u534F\u8BAE\uFF0C\u662F\u4E00\u79CD\u9762\u5411\u8FDE\u63A5\uFF08\u8FDE\u63A5\u5BFC\u5411\uFF09\u7684\u3001\u53EF\u9760\u7684\u3001\u57FA\u4E8E\u5B57\u8282\u6D41\u7684\u4F20\u8F93\u5C42\uFF08Transport layer\uFF09\u901A\u4FE1\u534F\u8BAE\uFF0C\u56E0\u4E3A\u662F\u9762\u5411\u8FDE\u63A5\u7684\u534F\u8BAE\uFF0C\u6570\u636E\u50CF\u6C34\u6D41\u4E00\u6837\u4F20\u8F93\uFF0C\u4F1A\u5B58\u5728\u9ECF\u5305\u95EE\u9898\u3002</p><h3 id="tcp\u670D\u52A1\u7AEF" tabindex="-1"><a class="header-anchor" href="#tcp\u670D\u52A1\u7AEF" aria-hidden="true">#</a> TCP\u670D\u52A1\u7AEF</h3><p>\u4E00\u4E2ATCP\u670D\u52A1\u7AEF\u53EF\u4EE5\u540C\u65F6\u8FDE\u63A5\u5F88\u591A\u4E2A\u5BA2\u6237\u7AEF\uFF0C\u4F8B\u5982\u4E16\u754C\u5404\u5730\u7684\u7528\u6237\u4F7F\u7528\u81EA\u5DF1\u7535\u8111\u4E0A\u7684\u6D4F\u89C8\u5668\u8BBF\u95EE\u6DD8\u5B9D\u7F51\u3002\u56E0\u4E3AGo\u8BED\u8A00\u4E2D\u521B\u5EFA\u591A\u4E2Agoroutine\u5B9E\u73B0\u5E76\u53D1\u975E\u5E38\u65B9\u4FBF\u548C\u9AD8\u6548\uFF0C\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u6BCF\u5EFA\u7ACB\u4E00\u6B21\u94FE\u63A5\u5C31\u521B\u5EFA\u4E00\u4E2Agoroutine\u53BB\u5904\u7406\u3002</p><p>TCP\u670D\u52A1\u7AEF\u7A0B\u5E8F\u7684\u5904\u7406\u6D41\u7A0B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    1.\u76D1\u542C\u7AEF\u53E3
    2.\u63A5\u6536\u5BA2\u6237\u7AEF\u8BF7\u6C42\u5EFA\u7ACB\u94FE\u63A5
    3.\u521B\u5EFAgoroutine\u5904\u7406\u94FE\u63A5\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u4F7F\u7528Go\u8BED\u8A00\u7684net\u5305\u5B9E\u73B0\u7684TCP\u670D\u52A1\u7AEF\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// tcp/server/main.go</span>

<span class="token comment">// TCP server\u7AEF</span>

<span class="token comment">// \u5904\u7406\u51FD\u6570</span>
<span class="token keyword">func</span> <span class="token function">process</span><span class="token punctuation">(</span>conn net<span class="token punctuation">.</span>Conn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5173\u95ED\u8FDE\u63A5</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
        reader <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>
        <span class="token keyword">var</span> buf <span class="token punctuation">[</span><span class="token number">128</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
        n<span class="token punctuation">,</span> err <span class="token operator">:=</span> reader<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u8BFB\u53D6\u6570\u636E</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;read from client failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
        recvStr <span class="token operator">:=</span> <span class="token function">string</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6536\u5230client\u7AEF\u53D1\u6765\u7684\u6570\u636E\uFF1A&quot;</span><span class="token punctuation">,</span> recvStr<span class="token punctuation">)</span>
        conn<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>recvStr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u53D1\u9001\u6570\u636E</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    listen<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;127.0.0.1:20000&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;listen failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
        conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> listen<span class="token punctuation">.</span><span class="token function">Accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5EFA\u7ACB\u8FDE\u63A5</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;accept failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token keyword">continue</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">go</span> <span class="token function">process</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span> <span class="token comment">// \u542F\u52A8\u4E00\u4E2Agoroutine\u5904\u7406\u8FDE\u63A5</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C06\u4E0A\u9762\u7684\u4EE3\u7801\u4FDD\u5B58\u4E4B\u540E\u7F16\u8BD1\u6210server\u6216server.exe\u53EF\u6267\u884C\u6587\u4EF6\u3002</p><h3 id="tcp\u5BA2\u6237\u7AEF" tabindex="-1"><a class="header-anchor" href="#tcp\u5BA2\u6237\u7AEF" aria-hidden="true">#</a> TCP\u5BA2\u6237\u7AEF</h3><p>\u4E00\u4E2ATCP\u5BA2\u6237\u7AEF\u8FDB\u884CTCP\u901A\u4FE1\u7684\u6D41\u7A0B\u5982\u4E0B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    1.\u5EFA\u7ACB\u4E0E\u670D\u52A1\u7AEF\u7684\u94FE\u63A5
    2.\u8FDB\u884C\u6570\u636E\u6536\u53D1
    3.\u5173\u95ED\u94FE\u63A5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528Go\u8BED\u8A00\u7684net\u5305\u5B9E\u73B0\u7684TCP\u5BA2\u6237\u7AEF\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// tcp/client/main.go</span>

<span class="token comment">// \u5BA2\u6237\u7AEF</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;127.0.0.1:20000&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;err :&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5173\u95ED\u8FDE\u63A5</span>
    inputReader <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdin<span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
        input<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> inputReader<span class="token punctuation">.</span><span class="token function">ReadString</span><span class="token punctuation">(</span><span class="token char">&#39;\\n&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u8BFB\u53D6\u7528\u6237\u8F93\u5165</span>
        inputInfo <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Trim</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> <span class="token string">&quot;\\r\\n&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">ToUpper</span><span class="token punctuation">(</span>inputInfo<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;Q&quot;</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u8F93\u5165q\u5C31\u9000\u51FA</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>inputInfo<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u53D1\u9001\u6570\u636E</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        buf <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">512</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
        n<span class="token punctuation">,</span> err <span class="token operator">:=</span> conn<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;recv failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C06\u4E0A\u9762\u7684\u4EE3\u7801\u7F16\u8BD1\u6210client\u6216client.exe\u53EF\u6267\u884C\u6587\u4EF6\uFF0C\u5148\u542F\u52A8server\u7AEF\u518D\u542F\u52A8client\u7AEF\uFF0C\u5728client\u7AEF\u8F93\u5165\u4EFB\u610F\u5185\u5BB9\u56DE\u8F66\u4E4B\u540E\u5C31\u80FD\u591F\u5728server\u7AEF\u770B\u5230client\u7AEF\u53D1\u9001\u7684\u6570\u636E\uFF0C\u4ECE\u800C\u5B9E\u73B0TCP\u901A\u4FE1\u3002</p><h2 id="end-\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#end-\u94FE\u63A5" aria-hidden="true">#</a> END \u94FE\u63A5</h2><ul><li><div><a href="2.md" style="float:left;">\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517}</a><a href="4.md" style="float:right;">\u2B07\uFE0F\u4E0B\u4E00\u8282\u{1F517}</a></div></li></ul>`,18),y=s("\u24C2\uFE0F\u56DE\u5230\u9996\u9875\u{1F3E0}"),w={href:"https://nsddd.top/archives/contributors",target:"_blank",rel:"noopener noreferrer"},C=n("strong",null,"\u{1FAF5}\u53C2\u4E0E\u8D21\u732E\u{1F49E}\u2764\uFE0F\u200D\u{1F525}\u{1F496}",-1),P=s(")"),q=s("\u2734\uFE0F\u7248\u6743\u58F0\u660E \xA9 :\u672C\u4E66\u6240\u6709\u5185\u5BB9\u9075\u5FAA"),x={href:"http://zh.wikipedia.org/wiki/Wikipedia:CC-by-sa-3.0%E5%8D%8F%E8%AE%AE%E6%96%87%E6%9C%AC",target:"_blank",rel:"noopener noreferrer"},T=s("CC-BY-SA 3.0\u534F\u8BAE\uFF08\u7F72\u540D-\u76F8\u540C\u65B9\u5F0F\u5171\u4EAB\uFF09\xA9");function E(R,N){const e=p("router-link"),c=p("RouterLink"),o=p("ExternalLinkIcon");return l(),u("div",null,[k,n("nav",v,[n("ul",null,[n("li",null,[a(e,{to:"#go\u8BED\u8A00\u5B9E\u73B0tcp\u901A\u4FE1"},{default:t(()=>[m]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#tcp\u534F\u8BAE"},{default:t(()=>[b]),_:1})]),n("li",null,[a(e,{to:"#tcp\u670D\u52A1\u7AEF"},{default:t(()=>[f]),_:1})]),n("li",null,[a(e,{to:"#tcp\u5BA2\u6237\u7AEF"},{default:t(()=>[h]),_:1})])])]),n("li",null,[a(e,{to:"#end-\u94FE\u63A5"},{default:t(()=>[_]),_:1})])])]),g,n("ul",null,[n("li",null,[n("p",null,[a(c,{to:"/Gomd_super/"},{default:t(()=>[y]),_:1})])]),n("li",null,[n("p",null,[n("a",w,[C,a(o)]),P])]),n("li",null,[n("p",null,[q,n("a",x,[T,a(o)])])])])])}const S=i(d,[["render",E],["__file","3.html.vue"]]);export{S as default};
