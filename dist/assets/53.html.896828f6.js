import{_ as e,r as p,o as c,c as u,a as n,b as a,w as i,d as l,e as s}from"./app.8acd33e1.js";const k={},r=l(`<h1 id="_1-\u64CD\u4F5Celasticsearch" tabindex="-1"><a class="header-anchor" href="#_1-\u64CD\u4F5Celasticsearch" aria-hidden="true">#</a> 1. \u64CD\u4F5CElasticSearch</h1><h3 id="_1-1-1-elastic-client" tabindex="-1"><a class="header-anchor" href="#_1-1-1-elastic-client" aria-hidden="true">#</a> 1.1.1. elastic client</h3><p>\u6211\u4EEC\u4F7F\u7528\u7B2C\u4E09\u65B9\u5E93https://github.com/olivere/elastic \u6765\u8FDE\u63A5ES\u5E76\u8FDB\u884C\u64CD\u4F5C\u3002</p><p>\u6CE8\u610F\u4E0B\u8F7D\u4E0E\u4F60\u7684ES\u76F8\u540C\u7248\u672C\u7684client\uFF0C\u4F8B\u5982\u6211\u4EEC\u8FD9\u91CC\u4F7F\u7528\u7684ES\u662F7.2.1\u7684\u7248\u672C\uFF0C\u90A3\u4E48\u6211\u4EEC\u4E0B\u8F7D\u7684client\u4E5F\u8981\u4E0E\u4E4B\u5BF9\u5E94\u4E3Agithub.com/olivere/elastic/v7\u3002</p><p>\u4F7F\u7528go.mod\u6765\u7BA1\u7406\u4F9D\u8D56\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    require (
        github.com/olivere/elastic/v7 v7.0.4
    )
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B80\u5355\u793A\u4F8B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;context&quot;</span>
    <span class="token string">&quot;fmt&quot;</span>

    <span class="token string">&quot;github.com/olivere/elastic/v7&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// Elasticsearch demo</span>

<span class="token keyword">type</span> Person <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    Name    <span class="token builtin">string</span> <span class="token string">\`json:&quot;name&quot;\`</span>
    Age     <span class="token builtin">int</span>    <span class="token string">\`json:&quot;age&quot;\`</span>
    Married <span class="token builtin">bool</span>   <span class="token string">\`json:&quot;married&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    client<span class="token punctuation">,</span> err <span class="token operator">:=</span> elastic<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span>elastic<span class="token punctuation">.</span><span class="token function">SetURL</span><span class="token punctuation">(</span><span class="token string">&quot;http://127.0.0.1:9200&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token comment">// Handle error</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;connect to es success&quot;</span><span class="token punctuation">)</span>
    p1 <span class="token operator">:=</span> Person<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;lmh&quot;</span><span class="token punctuation">,</span> Age<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> Married<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span>
    put1<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">BodyJson</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Do</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token comment">// Handle error</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Indexed user %s to index %s, type %s\\n&quot;</span><span class="token punctuation">,</span> put1<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> put1<span class="token punctuation">.</span>Index<span class="token punctuation">,</span> put1<span class="token punctuation">.</span>Type<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u793A\u4F8B2\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;context&quot;</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;log&quot;</span>
    <span class="token string">&quot;os&quot;</span>
    <span class="token string">&quot;reflect&quot;</span>

    <span class="token string">&quot;gopkg.in/olivere/elastic.v7&quot;</span> <span class="token comment">//\u8FD9\u91CC\u4F7F\u7528\u7684\u662F\u7248\u672C5\uFF0C\u6700\u65B0\u7684\u662F6\uFF0C\u6709\u6539\u52A8</span>
<span class="token punctuation">)</span>

<span class="token keyword">var</span> client <span class="token operator">*</span>elastic<span class="token punctuation">.</span>Client
<span class="token keyword">var</span> host <span class="token operator">=</span> <span class="token string">&quot;http://127.0.0.1:9200/&quot;</span>

<span class="token keyword">type</span> Employee <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    FirstName <span class="token builtin">string</span>   <span class="token string">\`json:&quot;first_name&quot;\`</span>
    LastName  <span class="token builtin">string</span>   <span class="token string">\`json:&quot;last_name&quot;\`</span>
    Age       <span class="token builtin">int</span>      <span class="token string">\`json:&quot;age&quot;\`</span>
    About     <span class="token builtin">string</span>   <span class="token string">\`json:&quot;about&quot;\`</span>
    Interests <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token string">\`json:&quot;interests&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u521D\u59CB\u5316</span>
<span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    errorlog <span class="token operator">:=</span> log<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">,</span> <span class="token string">&quot;APP&quot;</span><span class="token punctuation">,</span> log<span class="token punctuation">.</span>LstdFlags<span class="token punctuation">)</span>
    <span class="token keyword">var</span> err <span class="token builtin">error</span>
    client<span class="token punctuation">,</span> err <span class="token operator">=</span> elastic<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span>elastic<span class="token punctuation">.</span><span class="token function">SetErrorLog</span><span class="token punctuation">(</span>errorlog<span class="token punctuation">)</span><span class="token punctuation">,</span> elastic<span class="token punctuation">.</span><span class="token function">SetURL</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    info<span class="token punctuation">,</span> code<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Ping</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Elasticsearch returned with code %d and version %s\\n&quot;</span><span class="token punctuation">,</span> code<span class="token punctuation">,</span> info<span class="token punctuation">.</span>Version<span class="token punctuation">.</span>Number<span class="token punctuation">)</span>

    esversion<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">ElasticsearchVersion</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Elasticsearch version %s\\n&quot;</span><span class="token punctuation">,</span> esversion<span class="token punctuation">)</span>

<span class="token punctuation">}</span>

<span class="token comment">/*\u4E0B\u9762\u662F\u7B80\u5355\u7684CURD*/</span>

<span class="token comment">//\u521B\u5EFA</span>
<span class="token keyword">func</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">//\u4F7F\u7528\u7ED3\u6784\u4F53</span>
    e1 <span class="token operator">:=</span> Employee<span class="token punctuation">{</span><span class="token string">&quot;Jane&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Smith&quot;</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token string">&quot;I like to collect rock albums&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;music&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
    put1<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Index</span><span class="token punctuation">(</span><span class="token string">&quot;megacorp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Type</span><span class="token punctuation">(</span><span class="token string">&quot;employee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Id</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">BodyJson</span><span class="token punctuation">(</span>e1<span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Do</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Indexed tweet %s to index s%s, type %s\\n&quot;</span><span class="token punctuation">,</span> put1<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> put1<span class="token punctuation">.</span>Index<span class="token punctuation">,</span> put1<span class="token punctuation">.</span>Type<span class="token punctuation">)</span>

    <span class="token comment">//\u4F7F\u7528\u5B57\u7B26\u4E32</span>
    e2 <span class="token operator">:=</span> <span class="token string">\`{&quot;first_name&quot;:&quot;John&quot;,&quot;last_name&quot;:&quot;Smith&quot;,&quot;age&quot;:25,&quot;about&quot;:&quot;I love to go rock climbing&quot;,&quot;interests&quot;:[&quot;sports&quot;,&quot;music&quot;]}\`</span>
    put2<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Index</span><span class="token punctuation">(</span><span class="token string">&quot;megacorp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Type</span><span class="token punctuation">(</span><span class="token string">&quot;employee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Id</span><span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">BodyJson</span><span class="token punctuation">(</span>e2<span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Do</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Indexed tweet %s to index s%s, type %s\\n&quot;</span><span class="token punctuation">,</span> put2<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> put2<span class="token punctuation">.</span>Index<span class="token punctuation">,</span> put2<span class="token punctuation">.</span>Type<span class="token punctuation">)</span>

    e3 <span class="token operator">:=</span> <span class="token string">\`{&quot;first_name&quot;:&quot;Douglas&quot;,&quot;last_name&quot;:&quot;Fir&quot;,&quot;age&quot;:35,&quot;about&quot;:&quot;I like to build cabinets&quot;,&quot;interests&quot;:[&quot;forestry&quot;]}\`</span>
    put3<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Index</span><span class="token punctuation">(</span><span class="token string">&quot;megacorp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Type</span><span class="token punctuation">(</span><span class="token string">&quot;employee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Id</span><span class="token punctuation">(</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">BodyJson</span><span class="token punctuation">(</span>e3<span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Do</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Indexed tweet %s to index s%s, type %s\\n&quot;</span><span class="token punctuation">,</span> put3<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> put3<span class="token punctuation">.</span>Index<span class="token punctuation">,</span> put3<span class="token punctuation">.</span>Type<span class="token punctuation">)</span>

<span class="token punctuation">}</span>

<span class="token comment">//\u5220\u9664</span>
<span class="token keyword">func</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    res<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span><span class="token string">&quot;megacorp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Type</span><span class="token punctuation">(</span><span class="token string">&quot;employee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Id</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Do</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">println</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;delete result %s\\n&quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>Result<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u4FEE\u6539</span>
<span class="token keyword">func</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Index</span><span class="token punctuation">(</span><span class="token string">&quot;megacorp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Type</span><span class="token punctuation">(</span><span class="token string">&quot;employee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Id</span><span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Doc</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">88</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Do</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">println</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;update age %s\\n&quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>Result<span class="token punctuation">)</span>

<span class="token punctuation">}</span>

<span class="token comment">//\u67E5\u627E</span>
<span class="token keyword">func</span> <span class="token function">gets</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u901A\u8FC7id\u67E5\u627E</span>
    get1<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span><span class="token string">&quot;megacorp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Type</span><span class="token punctuation">(</span><span class="token string">&quot;employee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Id</span><span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> get1<span class="token punctuation">.</span>Found <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Got document %s in version %d from index %s, type %s\\n&quot;</span><span class="token punctuation">,</span> get1<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> get1<span class="token punctuation">.</span>Version<span class="token punctuation">,</span> get1<span class="token punctuation">.</span>Index<span class="token punctuation">,</span> get1<span class="token punctuation">.</span>Type<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u641C\u7D22</span>
<span class="token keyword">func</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> res <span class="token operator">*</span>elastic<span class="token punctuation">.</span>SearchResult
    <span class="token keyword">var</span> err <span class="token builtin">error</span>
    <span class="token comment">//\u53D6\u6240\u6709</span>
    res<span class="token punctuation">,</span> err <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">Search</span><span class="token punctuation">(</span><span class="token string">&quot;megacorp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Type</span><span class="token punctuation">(</span><span class="token string">&quot;employee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">printEmployee</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> err<span class="token punctuation">)</span>

    <span class="token comment">//\u5B57\u6BB5\u76F8\u7B49</span>
    q <span class="token operator">:=</span> elastic<span class="token punctuation">.</span><span class="token function">NewQueryStringQuery</span><span class="token punctuation">(</span><span class="token string">&quot;last_name:Smith&quot;</span><span class="token punctuation">)</span>
    res<span class="token punctuation">,</span> err <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">Search</span><span class="token punctuation">(</span><span class="token string">&quot;megacorp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Type</span><span class="token punctuation">(</span><span class="token string">&quot;employee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">println</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">printEmployee</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> err<span class="token punctuation">)</span>

    <span class="token comment">//\u6761\u4EF6\u67E5\u8BE2</span>
    <span class="token comment">//\u5E74\u9F84\u5927\u4E8E30\u5C81\u7684</span>
    boolQ <span class="token operator">:=</span> elastic<span class="token punctuation">.</span><span class="token function">NewBoolQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    boolQ<span class="token punctuation">.</span><span class="token function">Must</span><span class="token punctuation">(</span>elastic<span class="token punctuation">.</span><span class="token function">NewMatchQuery</span><span class="token punctuation">(</span><span class="token string">&quot;last_name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;smith&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    boolQ<span class="token punctuation">.</span><span class="token function">Filter</span><span class="token punctuation">(</span>elastic<span class="token punctuation">.</span><span class="token function">NewRangeQuery</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Gt</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    res<span class="token punctuation">,</span> err <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">Search</span><span class="token punctuation">(</span><span class="token string">&quot;megacorp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Type</span><span class="token punctuation">(</span><span class="token string">&quot;employee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">printEmployee</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> err<span class="token punctuation">)</span>

    <span class="token comment">//\u77ED\u8BED\u641C\u7D22 \u641C\u7D22about\u5B57\u6BB5\u4E2D\u6709 rock climbing</span>
    matchPhraseQuery <span class="token operator">:=</span> elastic<span class="token punctuation">.</span><span class="token function">NewMatchPhraseQuery</span><span class="token punctuation">(</span><span class="token string">&quot;about&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rock climbing&quot;</span><span class="token punctuation">)</span>
    res<span class="token punctuation">,</span> err <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">Search</span><span class="token punctuation">(</span><span class="token string">&quot;megacorp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Type</span><span class="token punctuation">(</span><span class="token string">&quot;employee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span>matchPhraseQuery<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">printEmployee</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> err<span class="token punctuation">)</span>

    <span class="token comment">//\u5206\u6790 interests</span>
    aggs <span class="token operator">:=</span> elastic<span class="token punctuation">.</span><span class="token function">NewTermsAggregation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;interests&quot;</span><span class="token punctuation">)</span>
    res<span class="token punctuation">,</span> err <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">Search</span><span class="token punctuation">(</span><span class="token string">&quot;megacorp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Type</span><span class="token punctuation">(</span><span class="token string">&quot;employee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Aggregation</span><span class="token punctuation">(</span><span class="token string">&quot;all_interests&quot;</span><span class="token punctuation">,</span> aggs<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">printEmployee</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> err<span class="token punctuation">)</span>

<span class="token punctuation">}</span>

<span class="token comment">//\u7B80\u5355\u5206\u9875</span>
<span class="token keyword">func</span> <span class="token function">list</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span> page <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> size <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> page <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;param error&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    res<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Search</span><span class="token punctuation">(</span><span class="token string">&quot;megacorp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Type</span><span class="token punctuation">(</span><span class="token string">&quot;employee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Size</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">From</span><span class="token punctuation">(</span><span class="token punctuation">(</span>page <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> size<span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Do</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">printEmployee</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> err<span class="token punctuation">)</span>

<span class="token punctuation">}</span>

<span class="token comment">//\u6253\u5370\u67E5\u8BE2\u5230\u7684Employee</span>
<span class="token keyword">func</span> <span class="token function">printEmployee</span><span class="token punctuation">(</span>res <span class="token operator">*</span>elastic<span class="token punctuation">.</span>SearchResult<span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">print</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> typ Employee
    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> item <span class="token operator">:=</span> <span class="token keyword">range</span> res<span class="token punctuation">.</span><span class="token function">Each</span><span class="token punctuation">(</span>reflect<span class="token punctuation">.</span><span class="token function">TypeOf</span><span class="token punctuation">(</span>typ<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u4ECE\u641C\u7D22\u7ED3\u679C\u4E2D\u53D6\u6570\u636E\u7684\u65B9\u6CD5</span>
        t <span class="token operator">:=</span> item<span class="token punctuation">.</span><span class="token punctuation">(</span>Employee<span class="token punctuation">)</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%#v\\n&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">gets</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">list</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u66F4\u591A\u4F7F\u7528\u8BE6\u89C1\u6587\u6863\uFF1Ahttps://godoc.org/github.com/olivere/elastic</p><p>\u8D4F</p><h2 id="end-\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#end-\u94FE\u63A5" aria-hidden="true">#</a> END \u94FE\u63A5</h2><ul><li><div><a href="52.md" style="float:left;">\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517}</a><a href="54.md" style="float:right;">\u2B07\uFE0F\u4E0B\u4E00\u8282\u{1F517}</a></div></li></ul>`,14),d=s("\u24C2\uFE0F\u56DE\u5230\u9996\u9875\u{1F3E0}"),v={href:"https://nsddd.top/archives/contributors",target:"_blank",rel:"noopener noreferrer"},m=n("strong",null,"\u{1FAF5}\u53C2\u4E0E\u8D21\u732E\u{1F49E}\u2764\uFE0F\u200D\u{1F525}\u{1F496}",-1),b=s(")"),f=s("\u2734\uFE0F\u7248\u6743\u58F0\u660E \xA9 :\u672C\u4E66\u6240\u6709\u5185\u5BB9\u9075\u5FAA"),q={href:"http://zh.wikipedia.org/wiki/Wikipedia:CC-by-sa-3.0%E5%8D%8F%E8%AE%AE%E6%96%87%E6%9C%AC",target:"_blank",rel:"noopener noreferrer"},g=s("CC-BY-SA 3.0\u534F\u8BAE\uFF08\u7F72\u540D-\u76F8\u540C\u65B9\u5F0F\u5171\u4EAB\uFF09\xA9");function y(h,w){const o=p("RouterLink"),t=p("ExternalLinkIcon");return c(),u("div",null,[r,n("ul",null,[n("li",null,[n("p",null,[a(o,{to:"/Gomd_super/"},{default:i(()=>[d]),_:1})])]),n("li",null,[n("p",null,[n("a",v,[m,a(t)]),b])]),n("li",null,[n("p",null,[f,n("a",q,[g,a(t)])])])])])}const _=e(k,[["render",y],["__file","53.html.vue"]]);export{_ as default};
