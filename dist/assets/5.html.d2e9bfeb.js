import{_ as l,r as p,o as i,c as u,a as n,b as a,w as t,e as s,d as r}from"./app.5500aabf.js";const k={},d=n("h1",{id:"tcp\u9ECF\u5305",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tcp\u9ECF\u5305","aria-hidden":"true"},"#"),s(" TCP\u9ECF\u5305")],-1),v={class:"table-of-contents"},m=s("\u670D\u52A1\u7AEF\u4EE3\u7801\u5982\u4E0B"),b=s("\u4E3A\u4EC0\u4E48\u4F1A\u51FA\u73B0\u7C98\u5305"),f=s("\u89E3\u51B3\u529E\u6CD5"),g=s("\u670D\u52A1\u7AEF\u4EE3\u7801"),y=s("END \u94FE\u63A5"),w=r(`<p>[toc]</p><h3 id="\u670D\u52A1\u7AEF\u4EE3\u7801\u5982\u4E0B" tabindex="-1"><a class="header-anchor" href="#\u670D\u52A1\u7AEF\u4EE3\u7801\u5982\u4E0B" aria-hidden="true">#</a> \u670D\u52A1\u7AEF\u4EE3\u7801\u5982\u4E0B</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// socket_stick/server/main.go</span>

<span class="token keyword">func</span> <span class="token function">process</span><span class="token punctuation">(</span>conn net<span class="token punctuation">.</span>Conn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    reader <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>
    <span class="token keyword">var</span> buf <span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
        n<span class="token punctuation">,</span> err <span class="token operator">:=</span> reader<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">==</span> io<span class="token punctuation">.</span>EOF <span class="token punctuation">{</span>
            <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;read from client failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
        recvStr <span class="token operator">:=</span> <span class="token function">string</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A&quot;</span><span class="token punctuation">,</span> recvStr<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    listen<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;127.0.0.1:30000&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;listen failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> listen<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
        conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> listen<span class="token punctuation">.</span><span class="token function">Accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;accept failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token keyword">continue</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">go</span> <span class="token function">process</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BA2\u6237\u7AEF\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// socket_stick/client/main.go</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;127.0.0.1:30000&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;dial failed, err&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        msg <span class="token operator">:=</span> <span class="token string">\`Hello, Hello. How are you?\`</span>
        conn<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C06\u4E0A\u9762\u7684\u4EE3\u7801\u4FDD\u5B58\u540E\uFF0C\u5206\u522B\u7F16\u8BD1\u3002\u5148\u542F\u52A8\u670D\u52A1\u7AEF\u518D\u542F\u52A8\u5BA2\u6237\u7AEF\uFF0C\u53EF\u4EE5\u770B\u5230\u670D\u52A1\u7AEF\u8F93\u51FA\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?Hello, Hello. How are you?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BA2\u6237\u7AEF\u520610\u6B21\u53D1\u9001\u7684\u6570\u636E\uFF0C\u5728\u670D\u52A1\u7AEF\u5E76\u6CA1\u6709\u6210\u529F\u7684\u8F93\u51FA10\u6B21\uFF0C\u800C\u662F\u591A\u6761\u6570\u636E\u201C\u7C98\u201D\u5230\u4E86\u4E00\u8D77\u3002</p><h2 id="\u4E3A\u4EC0\u4E48\u4F1A\u51FA\u73B0\u7C98\u5305" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u4F1A\u51FA\u73B0\u7C98\u5305" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u4F1A\u51FA\u73B0\u7C98\u5305</h2><p>\u4E3B\u8981\u539F\u56E0\u5C31\u662Ftcp\u6570\u636E\u4F20\u9012\u6A21\u5F0F\u662F\u6D41\u6A21\u5F0F\uFF0C\u5728\u4FDD\u6301\u957F\u8FDE\u63A5\u7684\u65F6\u5019\u53EF\u4EE5\u8FDB\u884C\u591A\u6B21\u7684\u6536\u548C\u53D1\u3002</p><p>\u201C\u7C98\u5305\u201D\u53EF\u53D1\u751F\u5728\u53D1\u9001\u7AEF\u4E5F\u53EF\u53D1\u751F\u5728\u63A5\u6536\u7AEF\uFF1A</p><ol><li>\u7531Nagle\u7B97\u6CD5\u9020\u6210\u7684\u53D1\u9001\u7AEF\u7684\u7C98\u5305\uFF1ANagle\u7B97\u6CD5\u662F\u4E00\u79CD\u6539\u5584\u7F51\u7EDC\u4F20\u8F93\u6548\u7387\u7684\u7B97\u6CD5\u3002\u7B80\u5355\u6765\u8BF4\u5C31\u662F\u5F53\u6211\u4EEC\u63D0\u4EA4\u4E00\u6BB5\u6570\u636E\u7ED9TCP\u53D1\u9001\u65F6\uFF0CTCP\u5E76\u4E0D\u7ACB\u523B\u53D1\u9001\u6B64\u6BB5\u6570\u636E\uFF0C\u800C\u662F\u7B49\u5F85\u4E00\u5C0F\u6BB5\u65F6\u95F4\u770B\u770B\u5728\u7B49\u5F85\u671F\u95F4\u662F\u5426\u8FD8\u6709\u8981\u53D1\u9001\u7684\u6570\u636E\uFF0C\u82E5\u6709\u5219\u4F1A\u4E00\u6B21\u628A\u8FD9\u4E24\u6BB5\u6570\u636E\u53D1\u9001\u51FA\u53BB\u3002</li><li>\u63A5\u6536\u7AEF\u63A5\u6536\u4E0D\u53CA\u65F6\u9020\u6210\u7684\u63A5\u6536\u7AEF\u7C98\u5305\uFF1ATCP\u4F1A\u628A\u63A5\u6536\u5230\u7684\u6570\u636E\u5B58\u5728\u81EA\u5DF1\u7684\u7F13\u51B2\u533A\u4E2D\uFF0C\u7136\u540E\u901A\u77E5\u5E94\u7528\u5C42\u53D6\u6570\u636E\u3002\u5F53\u5E94\u7528\u5C42\u7531\u4E8E\u67D0\u4E9B\u539F\u56E0\u4E0D\u80FD\u53CA\u65F6\u7684\u628ATCP\u7684\u6570\u636E\u53D6\u51FA\u6765\uFF0C\u5C31\u4F1A\u9020\u6210TCP\u7F13\u51B2\u533A\u4E2D\u5B58\u653E\u4E86\u51E0\u6BB5\u6570\u636E\u3002</li></ol><h2 id="\u89E3\u51B3\u529E\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u89E3\u51B3\u529E\u6CD5" aria-hidden="true">#</a> \u89E3\u51B3\u529E\u6CD5</h2><p>\u51FA\u73B0\u201D\u7C98\u5305\u201D\u7684\u5173\u952E\u5728\u4E8E\u63A5\u6536\u65B9\u4E0D\u786E\u5B9A\u5C06\u8981\u4F20\u8F93\u7684\u6570\u636E\u5305\u7684\u5927\u5C0F\uFF0C\u56E0\u6B64\u6211\u4EEC\u53EF\u4EE5\u5BF9\u6570\u636E\u5305\u8FDB\u884C\u5C01\u5305\u548C\u62C6\u5305\u7684\u64CD\u4F5C\u3002</p><p>\u5C01\u5305\uFF1A\u5C01\u5305\u5C31\u662F\u7ED9\u4E00\u6BB5\u6570\u636E\u52A0\u4E0A\u5305\u5934\uFF0C\u8FD9\u6837\u4E00\u6765\u6570\u636E\u5305\u5C31\u5206\u4E3A\u5305\u5934\u548C\u5305\u4F53\u4E24\u90E8\u5206\u5185\u5BB9\u4E86(\u8FC7\u6EE4\u975E\u6CD5\u5305\u65F6\u5C01\u5305\u4F1A\u52A0\u5165\u201D\u5305\u5C3E\u201D\u5185\u5BB9)\u3002\u5305\u5934\u90E8\u5206\u7684\u957F\u5EA6\u662F\u56FA\u5B9A\u7684\uFF0C\u5E76\u4E14\u5B83\u5B58\u50A8\u4E86\u5305\u4F53\u7684\u957F\u5EA6\uFF0C\u6839\u636E\u5305\u5934\u957F\u5EA6\u56FA\u5B9A\u4EE5\u53CA\u5305\u5934\u4E2D\u542B\u6709\u5305\u4F53\u957F\u5EA6\u7684\u53D8\u91CF\u5C31\u80FD\u6B63\u786E\u7684\u62C6\u5206\u51FA\u4E00\u4E2A\u5B8C\u6574\u7684\u6570\u636E\u5305\u3002</p><p>\u6211\u4EEC\u53EF\u4EE5\u81EA\u5DF1\u5B9A\u4E49\u4E00\u4E2A\u534F\u8BAE\uFF0C\u6BD4\u5982\u6570\u636E\u5305\u7684\u524D4\u4E2A\u5B57\u8282\u4E3A\u5305\u5934\uFF0C\u91CC\u9762\u5B58\u50A8\u7684\u662F\u53D1\u9001\u7684\u6570\u636E\u7684\u957F\u5EA6\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// socket_stick/proto/proto.go</span>
<span class="token keyword">package</span> proto

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;bufio&quot;</span>
    <span class="token string">&quot;bytes&quot;</span>
    <span class="token string">&quot;encoding/binary&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// Encode \u5C06\u6D88\u606F\u7F16\u7801</span>
<span class="token keyword">func</span> <span class="token function">Encode</span><span class="token punctuation">(</span>message <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BFB\u53D6\u6D88\u606F\u7684\u957F\u5EA6\uFF0C\u8F6C\u6362\u6210int32\u7C7B\u578B\uFF08\u53604\u4E2A\u5B57\u8282\uFF09</span>
    <span class="token keyword">var</span> length <span class="token operator">=</span> <span class="token function">int32</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> pkg <span class="token operator">=</span> <span class="token function">new</span><span class="token punctuation">(</span>bytes<span class="token punctuation">.</span>Buffer<span class="token punctuation">)</span>
    <span class="token comment">// \u5199\u5165\u6D88\u606F\u5934</span>
    err <span class="token operator">:=</span> binary<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>pkg<span class="token punctuation">,</span> binary<span class="token punctuation">.</span>LittleEndian<span class="token punctuation">,</span> length<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5199\u5165\u6D88\u606F\u5B9E\u4F53</span>
    err <span class="token operator">=</span> binary<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>pkg<span class="token punctuation">,</span> binary<span class="token punctuation">.</span>LittleEndian<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> pkg<span class="token punctuation">.</span><span class="token function">Bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token comment">// Decode \u89E3\u7801\u6D88\u606F</span>
<span class="token keyword">func</span> <span class="token function">Decode</span><span class="token punctuation">(</span>reader <span class="token operator">*</span>bufio<span class="token punctuation">.</span>Reader<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BFB\u53D6\u6D88\u606F\u7684\u957F\u5EA6</span>
    lengthByte<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> reader<span class="token punctuation">.</span><span class="token function">Peek</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment">// \u8BFB\u53D6\u524D4\u4E2A\u5B57\u8282\u7684\u6570\u636E</span>
    lengthBuff <span class="token operator">:=</span> bytes<span class="token punctuation">.</span><span class="token function">NewBuffer</span><span class="token punctuation">(</span>lengthByte<span class="token punctuation">)</span>
    <span class="token keyword">var</span> length <span class="token builtin">int32</span>
    err <span class="token operator">:=</span> binary<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>lengthBuff<span class="token punctuation">,</span> binary<span class="token punctuation">.</span>LittleEndian<span class="token punctuation">,</span> <span class="token operator">&amp;</span>length<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>
    <span class="token comment">// Buffered\u8FD4\u56DE\u7F13\u51B2\u4E2D\u73B0\u6709\u7684\u53EF\u8BFB\u53D6\u7684\u5B57\u8282\u6570\u3002</span>
    <span class="token keyword">if</span> <span class="token function">int32</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span><span class="token function">Buffered</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> length<span class="token operator">+</span><span class="token number">4</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>

    <span class="token comment">// \u8BFB\u53D6\u771F\u6B63\u7684\u6D88\u606F\u6570\u636E</span>
    pack <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token function">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">+</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>pack<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">string</span><span class="token punctuation">(</span>pack<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u5728\u670D\u52A1\u7AEF\u548C\u5BA2\u6237\u7AEF\u5206\u522B\u4F7F\u7528\u4E0A\u9762\u5B9A\u4E49\u7684proto\u5305\u7684Decode\u548CEncode\u51FD\u6570\u5904\u7406\u6570\u636E\u3002</p><h3 id="\u670D\u52A1\u7AEF\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u670D\u52A1\u7AEF\u4EE3\u7801" aria-hidden="true">#</a> \u670D\u52A1\u7AEF\u4EE3\u7801</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// socket_stick/server2/main.go</span>

<span class="token keyword">func</span> <span class="token function">process</span><span class="token punctuation">(</span>conn net<span class="token punctuation">.</span>Conn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    reader <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
        msg<span class="token punctuation">,</span> err <span class="token operator">:=</span> proto<span class="token punctuation">.</span><span class="token function">Decode</span><span class="token punctuation">(</span>reader<span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">==</span> io<span class="token punctuation">.</span>EOF <span class="token punctuation">{</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;decode msg failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    listen<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;127.0.0.1:30000&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;listen failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> listen<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
        conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> listen<span class="token punctuation">.</span><span class="token function">Accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;accept failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token keyword">continue</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">go</span> <span class="token function">process</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BA2\u6237\u7AEF\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// socket_stick/client2/main.go</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;127.0.0.1:30000&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;dial failed, err&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        msg <span class="token operator">:=</span> <span class="token string">\`Hello, Hello. How are you?\`</span>
        data<span class="token punctuation">,</span> err <span class="token operator">:=</span> proto<span class="token punctuation">.</span><span class="token function">Encode</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;encode msg failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        conn<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="end-\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#end-\u94FE\u63A5" aria-hidden="true">#</a> END \u94FE\u63A5</h2><ul><li><div><a href="4.md" style="float:left;">\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517}</a><a href="6.md" style="float:right;">\u2B07\uFE0F\u4E0B\u4E00\u8282\u{1F517}</a></div></li></ul>`,24),h=s("\u24C2\uFE0F\u56DE\u5230\u9996\u9875\u{1F3E0}"),H={href:"https://nsddd.top/archives/contributors",target:"_blank",rel:"noopener noreferrer"},_=n("strong",null,"\u{1FAF5}\u53C2\u4E0E\u8D21\u732E\u{1F49E}\u2764\uFE0F\u200D\u{1F525}\u{1F496}",-1),q=s(")"),C=s("\u2734\uFE0F\u7248\u6743\u58F0\u660E \xA9 :\u672C\u4E66\u6240\u6709\u5185\u5BB9\u9075\u5FAA"),E={href:"http://zh.wikipedia.org/wiki/Wikipedia:CC-by-sa-3.0%E5%8D%8F%E8%AE%AE%E6%96%87%E6%9C%AC",target:"_blank",rel:"noopener noreferrer"},x=s("CC-BY-SA 3.0\u534F\u8BAE\uFF08\u7F72\u540D-\u76F8\u540C\u65B9\u5F0F\u5171\u4EAB\uFF09\xA9");function P(B,N){const e=p("router-link"),c=p("RouterLink"),o=p("ExternalLinkIcon");return i(),u("div",null,[d,n("nav",v,[n("ul",null,[n("li",null,[a(e,{to:"#\u670D\u52A1\u7AEF\u4EE3\u7801\u5982\u4E0B"},{default:t(()=>[m]),_:1})]),n("li",null,[a(e,{to:"#\u4E3A\u4EC0\u4E48\u4F1A\u51FA\u73B0\u7C98\u5305"},{default:t(()=>[b]),_:1})]),n("li",null,[a(e,{to:"#\u89E3\u51B3\u529E\u6CD5"},{default:t(()=>[f]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#\u670D\u52A1\u7AEF\u4EE3\u7801"},{default:t(()=>[g]),_:1})])])]),n("li",null,[a(e,{to:"#end-\u94FE\u63A5"},{default:t(()=>[y]),_:1})])])]),w,n("ul",null,[n("li",null,[n("p",null,[a(c,{to:"/Gomd_super/"},{default:t(()=>[h]),_:1})])]),n("li",null,[n("p",null,[n("a",H,[_,a(o)]),q])]),n("li",null,[n("p",null,[C,n("a",E,[x,a(o)])])])])])}const L=l(k,[["render",P],["__file","5.html.vue"]]);export{L as default};
