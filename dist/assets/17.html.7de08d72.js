import{_ as p,r as o,o as d,c as u,a as n,b as s,w as t,d as a,e as l}from"./app.2cadb53f.js";const r={},k=n("h1",{id:"\u539F\u5B50\u64CD\u4F5C-atomic\u5305",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u539F\u5B50\u64CD\u4F5C-atomic\u5305","aria-hidden":"true"},"#"),a(" \u539F\u5B50\u64CD\u4F5C(atomic\u5305)")],-1),v={class:"table-of-contents"},m=a("1.1.1. \u539F\u5B50\u64CD\u4F5C"),f=a("1.1.2. atomic\u5305"),b=a("1.1.3. \u793A\u4F8B"),_=a("END \u94FE\u63A5"),h=l(`<p>[toc]</p><h3 id="_1-1-1-\u539F\u5B50\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_1-1-1-\u539F\u5B50\u64CD\u4F5C" aria-hidden="true">#</a> 1.1.1. \u539F\u5B50\u64CD\u4F5C</h3><p>\u4EE3\u7801\u4E2D\u7684\u52A0\u9501\u64CD\u4F5C\u56E0\u4E3A\u6D89\u53CA\u5185\u6838\u6001\u7684\u4E0A\u4E0B\u6587\u5207\u6362\u4F1A\u6BD4\u8F83\u8017\u65F6\u3001\u4EE3\u4EF7\u6BD4\u8F83\u9AD8\u3002\u9488\u5BF9\u57FA\u672C\u6570\u636E\u7C7B\u578B\u6211\u4EEC\u8FD8\u53EF\u4EE5\u4F7F\u7528\u539F\u5B50\u64CD\u4F5C\u6765\u4FDD\u8BC1\u5E76\u53D1\u5B89\u5168\uFF0C\u56E0\u4E3A\u539F\u5B50\u64CD\u4F5C\u662FGo\u8BED\u8A00\u63D0\u4F9B\u7684\u65B9\u6CD5\u5B83\u5728\u7528\u6237\u6001\u5C31\u53EF\u4EE5\u5B8C\u6210\uFF0C\u56E0\u6B64\u6027\u80FD\u6BD4\u52A0\u9501\u64CD\u4F5C\u66F4\u597D\u3002Go\u8BED\u8A00\u4E2D\u539F\u5B50\u64CD\u4F5C\u7531\u5185\u7F6E\u7684\u6807\u51C6\u5E93sync/atomic\u63D0\u4F9B\u3002</p><h3 id="_1-1-2-atomic\u5305" tabindex="-1"><a class="header-anchor" href="#_1-1-2-atomic\u5305" aria-hidden="true">#</a> 1.1.2. atomic\u5305</h3><table><thead><tr><th>\u65B9\u6CD5</th><th>\u89E3\u91CA</th></tr></thead><tbody><tr><td>func LoadInt32(addr *int32) (val int32) func LoadInt64(addr <code>*int64</code>) (val int64)<br>func LoadUint32(addr<code>*uint32</code>) (val uint32)<br>func LoadUint64(addr<code>*uint64</code>) (val uint64)<br>func LoadUintptr(addr<code>*uintptr</code>) (val uintptr)<br>func LoadPointer(addr<code>*unsafe.Pointer</code>) (val unsafe.Pointer)</td><td>\u8BFB\u53D6\u64CD\u4F5C</td></tr><tr><td>func StoreInt32(addr <code>*int32</code>, val int32) func StoreInt64(addr <code>*int64</code>, val int64) func StoreUint32(addr <code>*uint32</code>, val uint32) func StoreUint64(addr <code>*uint64</code>, val uint64) func StoreUintptr(addr <code>*uintptr</code>, val uintptr) func StorePointer(addr <code>*unsafe.Pointer</code>, val unsafe.Pointer)</td><td>\u5199\u5165\u64CD\u4F5C</td></tr><tr><td>func AddInt32(addr <code>*int32</code>, delta int32) (new int32) func AddInt64(addr <code>*int64</code>, delta int64) (new int64) func AddUint32(addr <code>*uint32</code>, delta uint32) (new uint32) func AddUint64(addr <code>*uint64</code>, delta uint64) (new uint64) func AddUintptr(addr <code>*uintptr</code>, delta uintptr) (new uintptr)</td><td>\u4FEE\u6539\u64CD\u4F5C</td></tr><tr><td>func SwapInt32(addr <code>*int32</code>, new int32) (old int32) func SwapInt64(addr <code>*int64</code>, new int64) (old int64) func SwapUint32(addr <code>*uint32</code>, new uint32) (old uint32) func SwapUint64(addr <code>*uint64</code>, new uint64) (old uint64) func SwapUintptr(addr <code>*uintptr</code>, new uintptr) (old uintptr) func SwapPointer(addr <code>*unsafe.Pointer</code>, new unsafe.Pointer) (old unsafe.Pointer)</td><td>\u4EA4\u6362\u64CD\u4F5C</td></tr><tr><td>func CompareAndSwapInt32(addr <code>*int32</code>, old, new int32) (swapped bool) func CompareAndSwapInt64(addr <code>*int64</code>, old, new int64) (swapped bool) func CompareAndSwapUint32(addr <code>*uint32</code>, old, new uint32) (swapped bool) func CompareAndSwapUint64(addr <code>*uint64</code>, old, new uint64) (swapped bool) func CompareAndSwapUintptr(addr <code>*uintptr</code>, old, new uintptr) (swapped bool) func CompareAndSwapPointer(addr <code>*unsafe.Pointer</code>, old, new unsafe.Pointer) (swapped bool)</td><td>\u6BD4\u8F83\u5E76\u4EA4\u6362\u64CD\u4F5C</td></tr></tbody></table><h3 id="_1-1-3-\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#_1-1-3-\u793A\u4F8B" aria-hidden="true">#</a> 1.1.3. \u793A\u4F8B</h3><p>\u6211\u4EEC\u586B\u5199\u4E00\u4E2A\u793A\u4F8B\u6765\u6BD4\u8F83\u4E0B\u4E92\u65A5\u9501\u548C\u539F\u5B50\u64CD\u4F5C\u7684\u6027\u80FD\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> x <span class="token builtin">int64</span>
<span class="token keyword">var</span> l sync<span class="token punctuation">.</span>Mutex
<span class="token keyword">var</span> wg sync<span class="token punctuation">.</span>WaitGroup

<span class="token comment">// \u666E\u901A\u7248\u52A0\u51FD\u6570</span>
<span class="token keyword">func</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// x = x + 1</span>
    x<span class="token operator">++</span> <span class="token comment">// \u7B49\u4EF7\u4E8E\u4E0A\u9762\u7684\u64CD\u4F5C</span>
    wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4E92\u65A5\u9501\u7248\u52A0\u51FD\u6570</span>
<span class="token keyword">func</span> <span class="token function">mutexAdd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    l<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    x<span class="token operator">++</span>
    l<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u539F\u5B50\u64CD\u4F5C\u7248\u52A0\u51FD\u6570</span>
<span class="token keyword">func</span> <span class="token function">atomicAdd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    atomic<span class="token punctuation">.</span><span class="token function">AddInt64</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>x<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    start <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token comment">// go add()       // \u666E\u901A\u7248add\u51FD\u6570 \u4E0D\u662F\u5E76\u53D1\u5B89\u5168\u7684</span>
        <span class="token comment">// go mutexAdd()  // \u52A0\u9501\u7248add\u51FD\u6570 \u662F\u5E76\u53D1\u5B89\u5168\u7684\uFF0C\u4F46\u662F\u52A0\u9501\u6027\u80FD\u5F00\u9500\u5927</span>
        <span class="token keyword">go</span> <span class="token function">atomicAdd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u539F\u5B50\u64CD\u4F5C\u7248add\u51FD\u6570 \u662F\u5E76\u53D1\u5B89\u5168\uFF0C\u6027\u80FD\u4F18\u4E8E\u52A0\u9501\u7248</span>
    <span class="token punctuation">}</span>
    wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    end <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>end<span class="token punctuation">.</span><span class="token function">Sub</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>atomic\u5305\u63D0\u4F9B\u4E86\u5E95\u5C42\u7684\u539F\u5B50\u7EA7\u5185\u5B58\u64CD\u4F5C\uFF0C\u5BF9\u4E8E\u540C\u6B65\u7B97\u6CD5\u7684\u5B9E\u73B0\u5F88\u6709\u7528\u3002\u8FD9\u4E9B\u51FD\u6570\u5FC5\u987B\u8C28\u614E\u5730\u4FDD\u8BC1\u6B63\u786E\u4F7F\u7528\u3002\u9664\u4E86\u67D0\u4E9B\u7279\u6B8A\u7684\u5E95\u5C42\u5E94\u7528\uFF0C\u4F7F\u7528\u901A\u9053\u6216\u8005sync\u5305\u7684\u51FD\u6570/\u7C7B\u578B\u5B9E\u73B0\u540C\u6B65\u66F4\u597D\u3002</p><h2 id="end-\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#end-\u94FE\u63A5" aria-hidden="true">#</a> END \u94FE\u63A5</h2><ul><li><div><a href="16.md" style="float:left;">\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517}</a><a href="18.md" style="float:right;">\u2B07\uFE0F\u4E0B\u4E00\u8282\u{1F517}</a></div></li></ul>`,11),w=a("\u24C2\uFE0F\u56DE\u5230\u9996\u9875\u{1F3E0}"),x={href:"https://nsddd.top/archives/contributors",target:"_blank",rel:"noopener noreferrer"},g=n("strong",null,"\u{1FAF5}\u53C2\u4E0E\u8D21\u732E\u{1F49E}\u2764\uFE0F\u200D\u{1F525}\u{1F496}",-1),A=a(")"),S=a("\u2734\uFE0F\u7248\u6743\u58F0\u660E \xA9 :\u672C\u4E66\u6240\u6709\u5185\u5BB9\u9075\u5FAA"),y={href:"http://zh.wikipedia.org/wiki/Wikipedia:CC-by-sa-3.0%E5%8D%8F%E8%AE%AE%E6%96%87%E6%9C%AC",target:"_blank",rel:"noopener noreferrer"},U=a("CC-BY-SA 3.0\u534F\u8BAE\uFF08\u7F72\u540D-\u76F8\u540C\u65B9\u5F0F\u5171\u4EAB\uFF09\xA9");function P(C,I){const e=o("router-link"),i=o("RouterLink"),c=o("ExternalLinkIcon");return d(),u("div",null,[k,n("nav",v,[n("ul",null,[n("li",null,[s(e,{to:"#_1-1-1-\u539F\u5B50\u64CD\u4F5C"},{default:t(()=>[m]),_:1})]),n("li",null,[s(e,{to:"#_1-1-2-atomic\u5305"},{default:t(()=>[f]),_:1})]),n("li",null,[s(e,{to:"#_1-1-3-\u793A\u4F8B"},{default:t(()=>[b]),_:1})]),n("li",null,[s(e,{to:"#end-\u94FE\u63A5"},{default:t(()=>[_]),_:1})])])]),h,n("ul",null,[n("li",null,[n("p",null,[s(i,{to:"/Gomd_super/"},{default:t(()=>[w]),_:1})])]),n("li",null,[n("p",null,[n("a",x,[g,s(c)]),A])]),n("li",null,[n("p",null,[S,n("a",y,[U,s(c)])])])])])}const L=p(r,[["render",P],["__file","17.html.vue"]]);export{L as default};
