import{_ as i,r as o,o as l,c as u,a as n,b as a,w as t,e as s,d as r}from"./app.f18da10e.js";const d={},k=n("h1",{id:"tcp\u7F51\u7EDC\u7F16\u7A0B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tcp\u7F51\u7EDC\u7F16\u7A0B","aria-hidden":"true"},"#"),s(" TCP\u7F51\u7EDC\u7F16\u7A0B")],-1),v={class:"table-of-contents"},m=s("\u7F51\u7EDC\u7F16\u7A0B"),b=s("\u7AEF\u53E3\uFF08port)"),g=s("\u5904\u7406\u6D41\u7A0B"),f=s("net"),h=s("net.ParseIP()"),q=s("END \u94FE\u63A5"),_=n("p",null,"[toc]",-1),P=s("\u{1F636}\u200D\u{1F32B}\uFE0Fgo\u8BED\u8A00\u5B98\u65B9\u7F16\u7A0B\u6307\u5357\uFF1A"),y={href:"https://golang.org/#",target:"_blank",rel:"noopener noreferrer"},w=s("https://golang.org/#"),I=n("blockquote",null,[n("p",null,"go\u8BED\u8A00\u7684\u5B98\u65B9\u6587\u6863\u5B66\u4E60\u7B14\u8BB0\u5F88\u5168\uFF0C\u63A8\u8350\u53BB\u5B98\u7F51\u5B66\u4E60")],-1),x=s("\u{1F636}\u200D\u{1F32B}\uFE0F\u6211\u7684\u5B66\u4E60\u7B14\u8BB0\uFF1Agithub: "),A={href:"https://github.com/3293172751/golang-rearn",target:"_blank",rel:"noopener noreferrer"},C=s("https://github.com/3293172751/golang-rearn"),E=n("hr",null,null,-1),R=n("p",null,[n("strong",null,"\u533A\u5757\u94FE\u6280\u672F\uFF08\u4E5F\u79F0\u4E4B\u4E3A\u5206\u5E03\u5F0F\u8D26\u672C\u6280\u672F\uFF09"),s("\uFF0C\u662F\u4E00\u79CD\u4E92\u8054\u7F51\u6570\u636E\u5E93\u6280\u672F\uFF0C\u5176\u7279\u70B9\u662F\u53BB\u4E2D\u5FC3\u5316\uFF0C\u516C\u5F00\u900F\u660E\uFF0C\u8BA9\u6BCF\u4E00\u4E2A\u4EBA\u5747\u53EF\u53C2\u4E0E\u7684\u6570\u636E\u5E93\u8BB0\u5F55")],-1),N=s("\u2764\uFE0F\u{1F495}\u{1F495}\u5173\u4E8E\u533A\u5757\u94FE\u6280\u672F\uFF0C\u53EF\u4EE5\u5173\u6CE8\u6211\uFF0C\u5171\u540C\u5B66\u4E60\u66F4\u591A\u7684\u533A\u5757\u94FE\u6280\u672F\u3002\u535A\u5BA2"),V={href:"http://nsddd.top",target:"_blank",rel:"noopener noreferrer"},S=s("http://nsddd.top"),L=r(`<h2 id="\u7F51\u7EDC\u7F16\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u7F51\u7EDC\u7F16\u7A0B" aria-hidden="true">#</a> \u7F51\u7EDC\u7F16\u7A0B</h2><ol><li><strong>TCP socket\u7F16\u7A0B\uFF1A\u76EE\u524D\u7F51\u7EDC\u7F16\u7A0B\u7684\u4E3B\u6D41\uFF0C\u5E95\u5C42\u4F7F\u7528TCP/IP\u534F\u8BAE\uFF08ipv4/ipv6)\u7684\uFF0C\u6BD4\u5982\u8BF4qq</strong></li><li><strong>b/s\u7ED3\u6784\u7684http\u7F16\u7A0B\uFF1Ahttp\u7684\u5E95\u5C42\u4E5F\u662F\u7528tcp socket\u5B9E\u73B0\u7684\uFF08web\u5F00\u53D1\uFF09</strong></li></ol><blockquote><p>\u4EE5\u540E\u505A\u670D\u52A1\u5668\u5F00\u53D1\uFF0C\u63A8\u8350\u81EA\u9876\u5411\u4E0B</p></blockquote><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>ipv4\uFF1A\u56DB\u4E2A\u5B57\u8282\u8868\u793A\u7684\u5730\u5740      32\u4F4D
ipv6\uFF1A\u5341\u516D\u4F4D\u5B57\u8282\u8868\u793A\u7684\u5730\u5740		128\u4F4D
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7AEF\u53E3-port" tabindex="-1"><a class="header-anchor" href="#\u7AEF\u53E3-port" aria-hidden="true">#</a> \u7AEF\u53E3\uFF08port)</h2><p><strong>\u6307\u7684\u662FTCP/IP\u534F\u8BAE\u4E2D\u7684\u7AEF\u53E3\uFF0C\u662F\u903B\u8F91\u610F\u4E49\u4E0A\u7684\u7AEF\u53E3</strong></p><p><strong>\u670D\u52A1\u7A0B\u5E8F\u5FC5\u987B\u8981\u76D1\u542C\u4E00\u4E2A\u7AEF\u53E3</strong></p><blockquote><p>\u6211\u4EEC\u5728\u505A\u670D\u52A1\u5668\u7684\u65F6\u5019\u5E94\u8BE5\u5C3D\u53EF\u80FD\u5C11\u5F00\u653E\u7AEF\u53E3\uFF0C\u5426\u5219\u53EF\u80FD\u4F1A\u6709\u5371\u9669</p></blockquote><p><strong>\u4E00\u4E2A\u7AEF\u53E3\u53EA\u80FD\u88AB\u4E00\u4E2A\u7A0B\u5E8F\u76D1\u542C</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>netstat -an :\u67E5\u770B\u672C\u673A\u6709\u54EA\u4E9B\u7AEF\u53E3\u5728\u76D1\u542C
netstat -anb:\u67E5\u770B\u76D1\u542C\u7AEF\u53E3\u7684pid\uFF0C\u7ED3\u5408\u4EFB\u52A1\u7BA1\u7406\u5668\u5173\u95ED\u4E0D\u5B89\u5168\u7AEF\u53E3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5904\u7406\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u5904\u7406\u6D41\u7A0B" aria-hidden="true">#</a> \u5904\u7406\u6D41\u7A0B</h2><p><strong>\u670D\u52A1\u7AEF\uFF1A</strong></p><ol><li>\u76D1\u542C\u7AEF\u53E3</li><li>\u63A5\u6536tcp\u94FE\u63A5\uFF0C\u5EFA\u7ACB\u548C\u5BA2\u6237\u7AEF\u94FE\u63A5</li><li>\u521B\u5EFAgoroutine,\u5904\u7406\u8BE5\u8FDE\u63A5\u7684\u8BF7\u6C42\uFF08<em>\u5BA2\u6237\u7AEF\u901A\u8FC7\u94FE\u63A5\u53D1\u9001\u8BF7\u6C42\u5305</em>\uFF09</li></ol><p><strong>\u5BA2\u6237\u7AEF\uFF1A</strong></p><ol><li>\u5EFA\u7ACB\u548C\u670D\u52A1\u7AEF\u94FE\u63A5</li><li>\u53D1\u9001\u8BF7\u6C42\u6570\u636E\uFF0C\u63A5\u6536\u670D\u52A1\u7AEF\u8FD4\u56DE\u7684\u6570\u636E</li><li>\u5173\u95ED\u8FDE\u63A5</li></ol><p><strong>\u5728\u505A\u7F51\u7EDC\u4E2D\uFF0C\u6211\u4EEC\u6700\u5E38\u7528\u7684\u5305net</strong></p><h2 id="net" tabindex="-1"><a class="header-anchor" href="#net" aria-hidden="true">#</a> net</h2><p><strong>\u670D\u52A1\u7AEF</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main
<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;net&quot;</span> <span class="token comment">//\u505A\u7F51\u7EDCsocket\u5F00\u53D1\u65F6,net\u5305\u542B\u6709\u6211\u4EEC\u9700\u8981\u6240\u6709\u7684\u65B9\u6CD5\u548C\u51FD\u6570</span>
	<span class="token boolean">_</span><span class="token string">&quot;io&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">process</span><span class="token punctuation">(</span>conn net<span class="token punctuation">.</span>Conn<span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token comment">//\u8FD9\u91CC\u6211\u4EEC\u5FAA\u73AF\u7684\u63A5\u6536\u5BA2\u6237\u7AEF\u53D1\u9001\u7684\u6570\u636E</span>
	<span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u5173\u95EDconn</span>

	<span class="token keyword">for</span> <span class="token punctuation">{</span>
		<span class="token comment">//\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u5207\u7247</span>
		buf <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">)</span>
		<span class="token comment">//conn.Read(buf)</span>
		<span class="token comment">//1. \u7B49\u5F85\u5BA2\u6237\u7AEF\u901A\u8FC7conn\u53D1\u9001\u4FE1\u606F</span>
		<span class="token comment">//2. \u5982\u679C\u5BA2\u6237\u7AEF\u6CA1\u6709wrtie[\u53D1\u9001]\uFF0C\u90A3\u4E48\u534F\u7A0B\u5C31\u963B\u585E\u5728\u8FD9\u91CC</span>
		<span class="token comment">//fmt.Printf(&quot;\u670D\u52A1\u5668\u5728\u7B49\u5F85\u5BA2\u6237\u7AEF%s \u53D1\u9001\u4FE1\u606F\\n&quot;, conn.RemoteAddr().String())</span>
		n <span class="token punctuation">,</span> err <span class="token operator">:=</span> conn<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span> <span class="token comment">//\u4ECEconn\u8BFB\u53D6</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			
			fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5BA2\u6237\u7AEF\u9000\u51FA err=%v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
			<span class="token keyword">return</span> <span class="token comment">//!!!</span>
		<span class="token punctuation">}</span>
		<span class="token comment">//3. \u663E\u793A\u5BA2\u6237\u7AEF\u53D1\u9001\u7684\u5185\u5BB9\u5230\u670D\u52A1\u5668\u7684\u7EC8\u7AEF</span>
		fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u670D\u52A1\u5668\u5F00\u59CB\u76D1\u542C....&quot;</span><span class="token punctuation">)</span>
	<span class="token comment">//net.Listen(&quot;tcp&quot;, &quot;0.0.0.0:8888&quot;)</span>
	<span class="token comment">//1. tcp \u8868\u793A\u4F7F\u7528\u7F51\u7EDC\u534F\u8BAE\u662Ftcp</span>
	<span class="token comment">//2. 0.0.0.0:8888 \u8868\u793A\u5728\u672C\u5730\u76D1\u542C 8888\u7AEF\u53E3,\u652F\u6301ipv4\u548Cipv6</span>
	listen<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;0.0.0.0:8888&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;listen err=&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
		<span class="token keyword">return</span> 
	<span class="token punctuation">}</span>
	<span class="token keyword">defer</span> listen<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u5EF6\u65F6\u5173\u95EDlisten</span>

	<span class="token comment">//\u5FAA\u73AF\u7B49\u5F85\u5BA2\u6237\u7AEF\u6765\u94FE\u63A5\u6211</span>
	<span class="token keyword">for</span> <span class="token punctuation">{</span>
		<span class="token comment">//\u7B49\u5F85\u5BA2\u6237\u7AEF\u94FE\u63A5</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7B49\u5F85\u5BA2\u6237\u7AEF\u6765\u94FE\u63A5....&quot;</span><span class="token punctuation">)</span>
		conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> listen<span class="token punctuation">.</span><span class="token function">Accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Accept() err=&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
			
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Accept() suc con=%v \u5BA2\u6237\u7AEFip=%v\\n&quot;</span><span class="token punctuation">,</span> conn<span class="token punctuation">,</span> conn<span class="token punctuation">.</span><span class="token function">RemoteAddr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token comment">//\u8FD9\u91CC\u51C6\u5907\u5176\u4E00\u4E2A\u534F\u7A0B\uFF0C\u4E3A\u5BA2\u6237\u7AEF\u670D\u52A1</span>
		<span class="token keyword">go</span> <span class="token function">process</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	
	<span class="token comment">//fmt.Printf(&quot;listen suc=%v\\n&quot;, listen)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5BA2\u6237\u7AEF</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main
<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;net&quot;</span>
	<span class="token string">&quot;bufio&quot;</span>
	<span class="token string">&quot;os&quot;</span>
	<span class="token string">&quot;strings&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;192.168.20.253:8888&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;client dial err=&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
		<span class="token keyword">return</span> 
	<span class="token punctuation">}</span>
	<span class="token comment">//\u529F\u80FD\u4E00\uFF1A\u5BA2\u6237\u7AEF\u53EF\u4EE5\u53D1\u9001\u5355\u884C\u6570\u636E\uFF0C\u7136\u540E\u5C31\u9000\u51FA</span>
	reader <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdin<span class="token punctuation">)</span> <span class="token comment">//os.Stdin \u4EE3\u8868\u6807\u51C6\u8F93\u5165[\u7EC8\u7AEF]</span>

	<span class="token keyword">for</span> <span class="token punctuation">{</span>

		<span class="token comment">//\u4ECE\u7EC8\u7AEF\u8BFB\u53D6\u4E00\u884C\u7528\u6237\u8F93\u5165\uFF0C\u5E76\u51C6\u5907\u53D1\u9001\u7ED9\u670D\u52A1\u5668</span>
		line<span class="token punctuation">,</span> err <span class="token operator">:=</span> reader<span class="token punctuation">.</span><span class="token function">ReadString</span><span class="token punctuation">(</span><span class="token char">&#39;\\n&#39;</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;readString err=&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token comment">//\u5982\u679C\u7528\u6237\u8F93\u5165\u7684\u662F exit\u5C31\u9000\u51FA</span>
		line <span class="token operator">=</span> strings<span class="token punctuation">.</span><span class="token function">Trim</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token string">&quot; \\r\\n&quot;</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> line <span class="token operator">==</span> <span class="token string">&quot;exit&quot;</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5BA2\u6237\u7AEF\u9000\u51FA..&quot;</span><span class="token punctuation">)</span>
			<span class="token keyword">break</span>
		<span class="token punctuation">}</span>

		<span class="token comment">//\u518D\u5C06line \u53D1\u9001\u7ED9 \u670D\u52A1\u5668</span>
		<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>line <span class="token operator">+</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;conn.Write err=&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>	
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>net.ResolveIPAddr()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>\u6839\u636E\u57DF\u540D\u67E5\u627EIP\u5730\u5740</strong></p><p>\u4E0D\u5F97\u4E0D\u611F\u53F9Go\u4E3A\u5F00\u53D1\u8005\u8003\u8651\u826F\u591A\uFF0Cgodoc\u8FD9\u4E2A\u5DE5\u5177\u771F\u7684\u5F88\u65B9\u4FBF\uFF01\u5148\u770B\u4E0B\u6E90\u7801\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>$ godoc <span class="token operator">-</span>src net<span class="token punctuation">.</span>ResolveIPAddr
<span class="token keyword">func</span> <span class="token function">ResolveIPAddr</span><span class="token punctuation">(</span>net<span class="token punctuation">,</span> addr <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>IPAddr<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> net <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
        net <span class="token operator">=</span> <span class="token string">&quot;ip&quot;</span>
    <span class="token punctuation">}</span>
    afnet<span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">parseNetwork</span><span class="token punctuation">(</span>net<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>
    <span class="token keyword">switch</span> afnet <span class="token punctuation">{</span>          <span class="token comment">//\u68C0\u6D4B</span>
    <span class="token keyword">case</span> <span class="token string">&quot;ip&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ip4&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ip6&quot;</span><span class="token punctuation">:</span>
    <span class="token keyword">default</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token function">UnknownNetworkError</span><span class="token punctuation">(</span>net<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    addrs<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">internetAddrList</span><span class="token punctuation">(</span>afnet<span class="token punctuation">,</span> addr<span class="token punctuation">,</span> noDeadline<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> addrs<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span>isIPv4<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>IPAddr<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u53C8\u4ECE\u6E90\u7801\u4E2D\u5B66\u4E60\u4E86\u4E00\u62DB\uFF1A<code>case &quot;ip&quot;, &quot;ip4&quot;, &quot;ip6&quot;</code>\u3002switch\u7684\u4E00\u4E2Acase\u76F4\u63A5\u68C0\u6D4B\u591A\u4E2A\u503C\u7684\u65B9\u6CD5\uFF0C\u5982\u679C\u4E0D\u5339\u914D\u5219\u6267\u884Cdefault\u4E2D\u7684\u4EE3\u7801\u3002</p><p>\u53EF\u4EE5\u770B\u5230\uFF0Cnet\u548Caddr\u5F62\u53C2\u90FD\u63A5\u53D7string\u7C7B\u578B\uFF0C\u800C\u8FD4\u56DE<strong>IPAddr</strong>\u7684\u6307\u9488\u7C7B\u578B\uFF0C\u548Cerror\u7C7B\u578B\u7684\u503C\u3002</p><p>\u6765\u4F7F\u7528\u4E00\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;net&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    addr<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">ResolveIPAddr</span><span class="token punctuation">(</span><span class="token string">&quot;ip&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;www.baidu.com&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>addr<span class="token punctuation">.</span>IP<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\uFF1A <img src="http://img.blog.csdn.net/20160330140849611" alt="\u8FD9\u91CC\u5199\u56FE\u7247\u63CF\u8FF0"></p><p>\u6CE8\u610F\u770BResolveIPAddr\u7684\u6E90\u7801\uFF0C\u5982\u679C\u4F60\u4F20\u7ED9net\u7684\u53C2\u6570\u4E0D\u662F<code>&quot;ip&quot;, &quot;ip4&quot;, &quot;ip6&quot;</code>\u5176\u4E2D\u7684\u4E00\u4E2A\uFF0C\u90A3\u4E48err\u5C31\u4E0D\u4F1A\u662Fnil\uFF0C\u800C\u662F<code>UnknownNetworkError(net)</code>\uFF0C\u9519\u8BEF\u7684\u8F93\u51FA\u4FE1\u606F\u4F1A\u662F\u8FD9\u6837\u7684\uFF1A <code>unknown network tcp</code>\u3002</p><h2 id="net-parseip" tabindex="-1"><a class="header-anchor" href="#net-parseip" aria-hidden="true">#</a> net.ParseIP()</h2><p><strong>\u68C0\u67E5IP\u5730\u5740\u683C\u5F0F\u662F\u5426\u6709\u6548</strong></p><p>\u4F9D\u7167\u60EF\u4F8B\uFF0C\u6211\u4EEC\u6765\u770B\u4E00\u4E0B\u6E90\u7801\uFF0C<code>$ godoc -src net ParseIP</code>\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">ParseIP</span><span class="token punctuation">(</span>s <span class="token builtin">string</span><span class="token punctuation">)</span> IP <span class="token punctuation">{</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token char">&#39;.&#39;</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token function">parseIPv4</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
        <span class="token keyword">case</span> <span class="token char">&#39;:&#39;</span><span class="token punctuation">:</span>
            ip<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> <span class="token function">parseIPv6</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> ip
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>IPv4\u7528<code>.</code>\u53F7\u9694\u5F00\uFF0CIPv6\u7528<code>\uFF1A</code>\u53F7\u9694\u5F00\uFF0C\u6240\u4EE5\u8FD9\u4E2A\u51FD\u6570\u7684\u5185\u90E8\u53C8\u8FDB\u884C\u4E86\u5224\u65AD\u5176\u662FIPv4\u8FD8\u662FIPv6\u3002</p><p>\u6CE8\u610F\uFF1A\u4F60\u4E0D\u8981\u624B\u52A8\u53BB\u8C03\u7528<code>net.parseIPv4</code>\u6216\u8005<code>net.parseIPv6</code>\uFF0C\u4F1A\u62A5\u5982\u4E0B\u9519\u8BEF\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cannot refer to unexported name net.parseIPV4
undefined: net.parseIPV4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3AGo\u5229\u7528\u9996\u5B57\u6BCD\u7684\u5927\u5C0F\u5199\u6765\u9650\u5236\u5305\u5916\u662F\u5426\u53EF\u8BBF\u95EE\uFF0C\u5C0F\u5199\u7684\u51FD\u6570\u6216\u53D8\u91CF\u5728\u5305\u5916\u65E0\u6CD5\u8BBF\u95EE\u5230\uFF0C\u5C31\u5982\u540CJava\u7684<code>public\uFF0Cprivate</code>\u4FEE\u9970\u7B26\u3002</p><p>\u67E5\u770B<code>parseIPv4</code>\u7684\u6E90\u7801\u53C8\u53D1\u73B0\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">parseIPv4</span><span class="token punctuation">(</span>s <span class="token builtin">string</span><span class="token punctuation">)</span> IP <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">return</span> <span class="token function">IPv4</span><span class="token punctuation">(</span>p<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> p<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> p<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> p<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u518D\u8FFD\u6EAF\u5230<code>IPv4\u4E0A</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">IPv4</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d <span class="token builtin">byte</span><span class="token punctuation">)</span> IP <span class="token punctuation">{</span>
    p <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span>IP<span class="token punctuation">,</span> IPv6len<span class="token punctuation">)</span>
    <span class="token function">copy</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> v4InV6Prefix<span class="token punctuation">)</span>
    p<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">=</span> a
    p<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">=</span> b
    p<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">=</span> c
    p<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">=</span> d
    <span class="token keyword">return</span> p
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u53D1\u73B0\u8FD9\u4E9B\u51FD\u6570\u90FD\u8FD4\u56DE\u4E86<code>IP</code>\u5BF9\u8C61\uFF0C\u6211\u4EEC\u6765\u770B\u4E00\u4E0BIP\u5BF9\u8C61\u7684\u5B9A\u4E49\uFF1A <code>type IP []byte</code> \u5176\u5B9E\u5C31\u662F\u4E00\u4E2A\u81EA\u5B9A\u4E49\u7684\u6570\u7EC4\u5207\u7247\u7C7B\u578B\u3002</p><p><code>IPv4</code>\u5185\u90E8\u7528make\u521D\u59CB\u5316\u4E86\u4E00\u4E2A\u6570\u7EC4\u5207\u7247\uFF0C\u5E76\u4E14\u6307\u5B9A\u4E86\u5143\u7D20\u4E2A\u6570\u4E3A<code>IPv6len</code>\u3002<code>IPv6len</code>\u88AB\u5B9A\u4E49\u4E3A\u5E38\u91CF\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">const</span> <span class="token punctuation">(</span>
    IPv6len <span class="token operator">=</span> <span class="token number">16</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u8FDB\u884C\u5C06<code>v4InV6Prefix</code>\u590D\u5236\u5230\u5230\u6570\u7EC4\u5207\u7247<code>p</code>\u4E2D\uFF0C<code>copy</code>\u7684\u7528\u6CD5\u8BF7\u81EA\u884C\u641C\u7D22\uFF08\u6CE8\u610Fcopy\u7684\u884C\u4E3A\u548C\u5E38\u4EBA\u7684\u7406\u89E3\u4E0D\u540C\uFF09\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> v4InV6Prefix <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0xff</span><span class="token punctuation">,</span> <span class="token number">0xff</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u81F3\u4E8E\u50A8\u5B58IPv4\u7684\u6570\u7EC4\u5207\u7247\u4E3A\u4EC0\u4E48\u8981\u5206\u914D16\u4E2A\u5143\u7D20\u7684\u5927\u5C0F\uFF0C\u53C8\u590D\u5236\u7ED9\u6700\u540E\u56DB\u4E2A\u7D22\u5F15\uFF0C\u53EF\u4EE5\u770B<code>type IP []byte</code>\u7684\u6CE8\u91CA\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// An IP is a single IP address, a slice of bytes.</span>
<span class="token comment">// Functions in this package accept either 4-byte (IPv4)</span>
<span class="token comment">// or 16-byte (IPv6) slices as input.</span>
<span class="token comment">//</span>
<span class="token comment">// Note that in this documentation, referring to an</span>
<span class="token comment">// IP address as an IPv4 address or an IPv6 address</span>
<span class="token comment">// is a semantic property of the address, not just the</span>
<span class="token comment">// length of the byte slice: a 16-byte slice can still</span>
<span class="token comment">// be an IPv4 address.</span>
<span class="token keyword">type</span> IP <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u8BF4\u4E86\uFF0C\u4E00\u4E2A<code>16-byte</code>\u5927\u5C0F\u7684\u6570\u7EC4\u53EF\u4EE5\u4ECD\u7136\u4F5C\u4E3AIPv4\u5730\u5740\u3002\u521B\u5EFA\u6570\u7EC4\u5207\u7247<code>slice1 := make([]int, 5)</code>\u5176\u521D\u59CB\u503C\u90FD\u4E3A<strong>0</strong>\u3002</p><h2 id="end-\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#end-\u94FE\u63A5" aria-hidden="true">#</a> END \u94FE\u63A5</h2><ul><li><div><a href="19.md" style="float:left;">\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517}</a><a href="21.md" style="float:right;">\u2B07\uFE0F\u4E0B\u4E00\u8282\u{1F517}</a></div></li></ul>`,53),T=s("\u24C2\uFE0F\u56DE\u5230\u76EE\u5F55\u{1F3E0}"),D={href:"https://nsddd.top/archives/contributors",target:"_blank",rel:"noopener noreferrer"},B=n("strong",null,"\u{1FAF5}\u53C2\u4E0E\u8D21\u732E\u{1F49E}\u2764\uFE0F\u200D\u{1F525}\u{1F496}",-1),W=s(")"),F=s("\u2734\uFE0F\u7248\u6743\u58F0\u660E \xA9 :\u672C\u4E66\u6240\u6709\u5185\u5BB9\u9075\u5FAA"),G={href:"http://zh.wikipedia.org/wiki/Wikipedia:CC-by-sa-3.0%E5%8D%8F%E8%AE%AE%E6%96%87%E6%9C%AC",target:"_blank",rel:"noopener noreferrer"},U=s("CC-BY-SA 3.0\u534F\u8BAE\uFF08\u7F72\u540D-\u76F8\u540C\u65B9\u5F0F\u5171\u4EAB\uFF09\xA9");function $(j,z){const e=o("router-link"),p=o("ExternalLinkIcon"),c=o("RouterLink");return l(),u("div",null,[k,n("nav",v,[n("ul",null,[n("li",null,[a(e,{to:"#\u7F51\u7EDC\u7F16\u7A0B"},{default:t(()=>[m]),_:1})]),n("li",null,[a(e,{to:"#\u7AEF\u53E3-port"},{default:t(()=>[b]),_:1})]),n("li",null,[a(e,{to:"#\u5904\u7406\u6D41\u7A0B"},{default:t(()=>[g]),_:1})]),n("li",null,[a(e,{to:"#net"},{default:t(()=>[f]),_:1})]),n("li",null,[a(e,{to:"#net-parseip"},{default:t(()=>[h]),_:1})]),n("li",null,[a(e,{to:"#end-\u94FE\u63A5"},{default:t(()=>[q]),_:1})])])]),_,n("p",null,[P,n("a",y,[w,a(p)])]),I,n("p",null,[x,n("a",A,[C,a(p)])]),E,R,n("blockquote",null,[n("p",null,[N,n("a",V,[S,a(p)])])]),L,n("ul",null,[n("li",null,[n("p",null,[a(c,{to:"/"},{default:t(()=>[T]),_:1})])]),n("li",null,[n("p",null,[n("a",D,[B,a(p)]),W])]),n("li",null,[n("p",null,[F,n("a",G,[U,a(p)])])])])])}const Y=i(d,[["render",$],["__file","20.html.vue"]]);export{Y as default};
