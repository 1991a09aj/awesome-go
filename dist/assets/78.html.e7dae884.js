import{_ as p,r as e,o as c,c as i,a as n,b as a,w as l,d as u,e as s}from"./app.64dac66d.js";const r={},d=u(`<h1 id="_1-\u54C8\u5E0C\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u54C8\u5E0C\u7B97\u6CD5" aria-hidden="true">#</a> 1. \u54C8\u5E0C\u7B97\u6CD5</h1><h3 id="_1-1-1-\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#_1-1-1-\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> 1.1.1. \u4F7F\u7528\u573A\u666F</h3><ul><li>\u5BF9\u7528\u6237\u8F93\u5165\u7684\u5BC6\u7801\u8FDB\u884C\u52A0\u5BC6</li><li>\u7528\u6237\u767B\u5F55\u65F6\u5BF9\u7528\u6237\u7684\u5BC6\u7801\u8FDB\u884C\u6BD4\u5BF9</li></ul><h3 id="_1-1-2-\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_1-1-2-\u4F8B\u5B50" aria-hidden="true">#</a> 1.1.2. \u4F8B\u5B50</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;errors&quot;</span>
    <span class="token string">&quot;fmt&quot;</span>

    <span class="token string">&quot;golang.org/x/crypto/bcrypt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    userPassword <span class="token operator">:=</span> <span class="token string">&quot;123456&quot;</span>
    passwordbyte<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">GeneratePassword</span><span class="token punctuation">(</span>userPassword<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u52A0\u5BC6\u51FA\u9519\u4E86&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>passwordbyte<span class="token punctuation">)</span>
    <span class="token comment">// passwordstring := string(passwordbyte)</span>
    <span class="token comment">// fmt.Println(passwordstring)</span>
    <span class="token comment">//\u6A21\u62DF\u8FD9\u4E2A\u5B57\u7B26\u4E32\u662F\u4ECE\u6570\u636E\u5E93\u8BFB\u53D6\u51FA\u6765\u7684 \u503C\u662F12345678</span>
    mysql_password <span class="token operator">:=</span> <span class="token string">&quot;$2a$10$I8WaWXgiBw8j/IBejb3t/.s5NoOYLvoQzL6mIM2g3TEu4z0HenzqK&quot;</span>
    isOk<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> <span class="token function">ValidatePassword</span><span class="token punctuation">(</span>userPassword<span class="token punctuation">,</span> mysql_password<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token operator">!</span>isOk <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5BC6\u7801\u9519\u8BEF&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>isOk<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">//GeneratePassword \u7ED9\u5BC6\u7801\u5C31\u884C\u52A0\u5BC6\u64CD\u4F5C</span>
<span class="token keyword">func</span> <span class="token function">GeneratePassword</span><span class="token punctuation">(</span>userPassword <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> bcrypt<span class="token punctuation">.</span><span class="token function">GenerateFromPassword</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>userPassword<span class="token punctuation">)</span><span class="token punctuation">,</span> bcrypt<span class="token punctuation">.</span>DefaultCost<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">//ValidatePassword \u5BC6\u7801\u6BD4\u5BF9</span>
<span class="token keyword">func</span> <span class="token function">ValidatePassword</span><span class="token punctuation">(</span>userPassword <span class="token builtin">string</span><span class="token punctuation">,</span> hashed <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>isOK <span class="token builtin">bool</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> err <span class="token operator">=</span> bcrypt<span class="token punctuation">.</span><span class="token function">CompareHashAndPassword</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>hashed<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>userPassword<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;\u5BC6\u7801\u6BD4\u5BF9\u9519\u8BEF\uFF01&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6CE8\u610F</strong></p><p><code>golang.org/x/crypto/bcrypt</code>\u8FD9\u4E2A\u5305\u4E0B\u8F7D\u6709\u4E9B\u96BE\u5EA6\uFF0C\u9700\u8981\u7684\u5C0F\u4F19\u4F34\u53EF\u4EE5\u81EA\u884C\u767E\u5EA6</p><p>\u5B98\u7F51\u5730\u5740\uFF1Ahttp://golang.org/x/crypto/bcrypt</p><h2 id="end-\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#end-\u94FE\u63A5" aria-hidden="true">#</a> END \u94FE\u63A5</h2><ul><li><div><a href="77.md" style="float:left;">\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517}</a><a href="79.md" style="float:right;">\u2B07\uFE0F\u4E0B\u4E00\u8282\u{1F517}</a></div></li></ul>`,10),k=s("\u24C2\uFE0F\u56DE\u5230\u9996\u9875\u{1F3E0}"),v={href:"https://nsddd.top/archives/contributors",target:"_blank",rel:"noopener noreferrer"},b=n("strong",null,"\u{1FAF5}\u53C2\u4E0E\u8D21\u732E\u{1F49E}\u2764\uFE0F\u200D\u{1F525}\u{1F496}",-1),m=s(")"),h=s("\u2734\uFE0F\u7248\u6743\u58F0\u660E \xA9 :\u672C\u4E66\u6240\u6709\u5185\u5BB9\u9075\u5FAA"),f={href:"http://zh.wikipedia.org/wiki/Wikipedia:CC-by-sa-3.0%E5%8D%8F%E8%AE%AE%E6%96%87%E6%9C%AC",target:"_blank",rel:"noopener noreferrer"},_=s("CC-BY-SA 3.0\u534F\u8BAE\uFF08\u7F72\u540D-\u76F8\u540C\u65B9\u5F0F\u5171\u4EAB\uFF09\xA9");function g(w,y){const o=e("RouterLink"),t=e("ExternalLinkIcon");return c(),i("div",null,[d,n("ul",null,[n("li",null,[n("p",null,[a(o,{to:"/Gomd_super/"},{default:l(()=>[k]),_:1})])]),n("li",null,[n("p",null,[n("a",v,[b,a(t)]),m])]),n("li",null,[n("p",null,[h,n("a",f,[_,a(t)])])])])])}const q=p(r,[["render",g],["__file","78.html.vue"]]);export{q as default};
