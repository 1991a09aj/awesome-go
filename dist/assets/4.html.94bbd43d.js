import{_ as u,r as e,o as l,c as i,a as n,b as a,w as t,d as s,e as r}from"./app.f9b8c60c.js";const k={},d=n("h1",{id:"udp\u7F16\u7A0B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#udp\u7F16\u7A0B","aria-hidden":"true"},"#"),s(" UDP\u7F16\u7A0B")],-1),v={class:"table-of-contents"},m=s("Go\u8BED\u8A00\u5B9E\u73B0UDP\u901A\u4FE1"),b=s("UDP\u534F\u8BAE"),f=s("UDP\u670D\u52A1\u7AEF"),h=s("UDP\u5BA2\u6237\u7AEF"),_=s("END \u94FE\u63A5"),P=r(`<p>[toc]</p><h2 id="go\u8BED\u8A00\u5B9E\u73B0udp\u901A\u4FE1" tabindex="-1"><a class="header-anchor" href="#go\u8BED\u8A00\u5B9E\u73B0udp\u901A\u4FE1" aria-hidden="true">#</a> Go\u8BED\u8A00\u5B9E\u73B0UDP\u901A\u4FE1</h2><h3 id="udp\u534F\u8BAE" tabindex="-1"><a class="header-anchor" href="#udp\u534F\u8BAE" aria-hidden="true">#</a> UDP\u534F\u8BAE</h3><p>UDP\u534F\u8BAE\uFF08User Datagram Protocol\uFF09\u4E2D\u6587\u540D\u79F0\u662F\u7528\u6237\u6570\u636E\u62A5\u534F\u8BAE\uFF0C\u662FOSI\uFF08Open System Interconnection\uFF0C\u5F00\u653E\u5F0F\u7CFB\u7EDF\u4E92\u8054\uFF09\u53C2\u8003\u6A21\u578B\u4E2D\u4E00\u79CD\u65E0\u8FDE\u63A5\u7684\u4F20\u8F93\u5C42\u534F\u8BAE\uFF0C\u4E0D\u9700\u8981\u5EFA\u7ACB\u8FDE\u63A5\u5C31\u80FD\u76F4\u63A5\u8FDB\u884C\u6570\u636E\u53D1\u9001\u548C\u63A5\u6536\uFF0C\u5C5E\u4E8E\u4E0D\u53EF\u9760\u7684\u3001\u6CA1\u6709\u65F6\u5E8F\u7684\u901A\u4FE1\uFF0C\u4F46\u662FUDP\u534F\u8BAE\u7684\u5B9E\u65F6\u6027\u6BD4\u8F83\u597D\uFF0C\u901A\u5E38\u7528\u4E8E\u89C6\u9891\u76F4\u64AD\u76F8\u5173\u9886\u57DF\u3002</p><h3 id="udp\u670D\u52A1\u7AEF" tabindex="-1"><a class="header-anchor" href="#udp\u670D\u52A1\u7AEF" aria-hidden="true">#</a> UDP\u670D\u52A1\u7AEF</h3><p>\u4F7F\u7528Go\u8BED\u8A00\u7684net\u5305\u5B9E\u73B0\u7684UDP\u670D\u52A1\u7AEF\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// UDP/server/main.go</span>

<span class="token comment">// UDP server\u7AEF</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    listen<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">ListenUDP</span><span class="token punctuation">(</span><span class="token string">&quot;udp&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>net<span class="token punctuation">.</span>UDPAddr<span class="token punctuation">{</span>
        IP<span class="token punctuation">:</span>   net<span class="token punctuation">.</span><span class="token function">IPv4</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        Port<span class="token punctuation">:</span> <span class="token number">30000</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;listen failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> listen<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> data <span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
        n<span class="token punctuation">,</span> addr<span class="token punctuation">,</span> err <span class="token operator">:=</span> listen<span class="token punctuation">.</span><span class="token function">ReadFromUDP</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u63A5\u6536\u6570\u636E</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;read udp failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token keyword">continue</span>
        <span class="token punctuation">}</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;data:%v addr:%v count:%v\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> addr<span class="token punctuation">,</span> n<span class="token punctuation">)</span>
        <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> listen<span class="token punctuation">.</span><span class="token function">WriteToUDP</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">,</span> addr<span class="token punctuation">)</span> <span class="token comment">// \u53D1\u9001\u6570\u636E</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;write to udp failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token keyword">continue</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="udp\u5BA2\u6237\u7AEF" tabindex="-1"><a class="header-anchor" href="#udp\u5BA2\u6237\u7AEF" aria-hidden="true">#</a> UDP\u5BA2\u6237\u7AEF</h3><p>\u4F7F\u7528Go\u8BED\u8A00\u7684net\u5305\u5B9E\u73B0\u7684UDP\u5BA2\u6237\u7AEF\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// UDP \u5BA2\u6237\u7AEF</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    socket<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">DialUDP</span><span class="token punctuation">(</span><span class="token string">&quot;udp&quot;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>net<span class="token punctuation">.</span>UDPAddr<span class="token punctuation">{</span>
        IP<span class="token punctuation">:</span>   net<span class="token punctuation">.</span><span class="token function">IPv4</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        Port<span class="token punctuation">:</span> <span class="token number">30000</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8FDE\u63A5\u670D\u52A1\u7AEF\u5931\u8D25\uFF0Cerr:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> socket<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    sendData <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;Hello server&quot;</span><span class="token punctuation">)</span>
    <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> socket<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>sendData<span class="token punctuation">)</span> <span class="token comment">// \u53D1\u9001\u6570\u636E</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53D1\u9001\u6570\u636E\u5931\u8D25\uFF0Cerr:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    data <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">4096</span><span class="token punctuation">)</span>
    n<span class="token punctuation">,</span> remoteAddr<span class="token punctuation">,</span> err <span class="token operator">:=</span> socket<span class="token punctuation">.</span><span class="token function">ReadFromUDP</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment">// \u63A5\u6536\u6570\u636E</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u63A5\u6536\u6570\u636E\u5931\u8D25\uFF0Cerr:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;recv:%v addr:%v count:%v\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> remoteAddr<span class="token punctuation">,</span> n<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="end-\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#end-\u94FE\u63A5" aria-hidden="true">#</a> END \u94FE\u63A5</h2><ul><li><div><a href="3.md" style="float:left;">\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517}</a><a href="5.md" style="float:right;">\u2B07\uFE0F\u4E0B\u4E00\u8282\u{1F517}</a></div></li></ul>`,12),g=s("\u24C2\uFE0F\u56DE\u5230\u9996\u9875\u{1F3E0}"),D={href:"https://nsddd.top/archives/contributors",target:"_blank",rel:"noopener noreferrer"},y=n("strong",null,"\u{1FAF5}\u53C2\u4E0E\u8D21\u732E\u{1F49E}\u2764\uFE0F\u200D\u{1F525}\u{1F496}",-1),U=s(")"),w=s("\u2734\uFE0F\u7248\u6743\u58F0\u660E \xA9 :\u672C\u4E66\u6240\u6709\u5185\u5BB9\u9075\u5FAA"),q={href:"http://zh.wikipedia.org/wiki/Wikipedia:CC-by-sa-3.0%E5%8D%8F%E8%AE%AE%E6%96%87%E6%9C%AC",target:"_blank",rel:"noopener noreferrer"},x=s("CC-BY-SA 3.0\u534F\u8BAE\uFF08\u7F72\u540D-\u76F8\u540C\u65B9\u5F0F\u5171\u4EAB\uFF09\xA9");function E(C,A){const p=e("router-link"),c=e("RouterLink"),o=e("ExternalLinkIcon");return l(),i("div",null,[d,n("nav",v,[n("ul",null,[n("li",null,[a(p,{to:"#go\u8BED\u8A00\u5B9E\u73B0udp\u901A\u4FE1"},{default:t(()=>[m]),_:1}),n("ul",null,[n("li",null,[a(p,{to:"#udp\u534F\u8BAE"},{default:t(()=>[b]),_:1})]),n("li",null,[a(p,{to:"#udp\u670D\u52A1\u7AEF"},{default:t(()=>[f]),_:1})]),n("li",null,[a(p,{to:"#udp\u5BA2\u6237\u7AEF"},{default:t(()=>[h]),_:1})])])]),n("li",null,[a(p,{to:"#end-\u94FE\u63A5"},{default:t(()=>[_]),_:1})])])]),P,n("ul",null,[n("li",null,[n("p",null,[a(c,{to:"/Gomd_super/"},{default:t(()=>[g]),_:1})])]),n("li",null,[n("p",null,[n("a",D,[y,a(o)]),U])]),n("li",null,[n("p",null,[w,n("a",q,[x,a(o)])])])])])}const N=u(k,[["render",E],["__file","4.html.vue"]]);export{N as default};
