import{_ as c,r as p,o as i,c as l,a as n,b as a,w as o,e as s,d as u}from"./app.bb6687c9.js";const r={},d={href:"https://github.com/3293172751",target:"_blank",rel:"noopener noreferrer"},k=s("author"),v=n("h1",{id:"\u7B2C18\u8282-go-\u6A21\u7CCA\u6D4B\u8BD5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7B2C18\u8282-go-\u6A21\u7CCA\u6D4B\u8BD5","aria-hidden":"true"},"#"),s(" \u7B2C18\u8282 go \u6A21\u7CCA\u6D4B\u8BD5")],-1),m=s("\u56DE\u5230\u76EE\u5F55"),b=s("\u4E0A\u4E00\u8282"),g=s("\u2764\uFE0F\u{1F495}\u{1F495}Go\u8BED\u8A00\u9AD8\u7EA7\u7BC7\u7AE0,\u5728\u6B64\u4E4B\u524D\u5EFA\u8BAE\u60A8\u5148\u4E86\u89E3\u57FA\u7840\u548C\u8FDB\u9636\u7BC7\u3002Myblog:"),h={href:"http://nsddd.top/",target:"_blank",rel:"noopener noreferrer"},q=s("http://nsddd.top"),f={id:"go\u8BED\u8A00\u57FA\u7840\u7BC7",tabindex:"-1"},_=n("a",{class:"header-anchor",href:"#go\u8BED\u8A00\u57FA\u7840\u7BC7","aria-hidden":"true"},"#",-1),w=s(),y={href:"https://github.com/3293172751/Block_Chain/blob/master/TOC.md",target:"_blank",rel:"noopener noreferrer"},x=s("Go\u8BED\u8A00\u57FA\u7840\u7BC7"),z={id:"go\u8BED\u8A00100\u7BC7\u8FDB\u9636",tabindex:"-1"},R=n("a",{class:"header-anchor",href:"#go\u8BED\u8A00100\u7BC7\u8FDB\u9636","aria-hidden":"true"},"#",-1),T=s(),F={href:"https://github.com/3293172751/Block_Chain/blob/master/Gomd_super/README.md",target:"_blank",rel:"noopener noreferrer"},P=s("Go\u8BED\u8A00100\u7BC7\u8FDB\u9636"),L=u(`<hr><p>[TOC]</p><h2 id="why-you-need-it" tabindex="-1"><a class="header-anchor" href="#why-you-need-it" aria-hidden="true">#</a> Why you need it\uFF1F</h2><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u5BF9\u6D4B\u8BD5\u8FDB\u884C\u4E00\u90E8\u5206\u7684\u589E\u5F3A\uFF0C\u6211\u4EEC\u5E73\u5E38\u5199\u4EE3\u7801\u540E\u80AF\u5B9A\u9700\u8981\u4E00\u90E8\u5206\u7684\u5355\u5143\u6D4B\u8BD5\uFF0C\u5728\u539F\u6709\u57FA\u7840\u4E0A\u589E\u5F3A\u3002</p></div><h2 id="\u6D4B\u8BD5\u6E90" tabindex="-1"><a class="header-anchor" href="#\u6D4B\u8BD5\u6E90" aria-hidden="true">#</a> \u6D4B\u8BD5\u6E90</h2><p>\u{1F4A1}\u7B80\u5355\u7684\u4E00\u4E2A\u6848\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> reverse<span class="token punctuation">[</span>T <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">(</span>s T<span class="token punctuation">)</span> T <span class="token punctuation">{</span>
	b <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
	<span class="token keyword">for</span> i<span class="token punctuation">,</span> j <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> j<span class="token punctuation">;</span> i<span class="token punctuation">,</span> j <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> j<span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">{</span>
		b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> b<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> b<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token function">T</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53CD\u8F6C\u4E4B\u524D\uFF1A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53CD\u8F6C\u4E4B\u540E\uFF1A&quot;</span><span class="token punctuation">,</span> <span class="token function">reverse</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53CD\u8F6C\u4E4B\u524D\uFF1A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello welcome to golang&quot;</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53CD\u8F6C\u4E4B\u540E\uFF1A&quot;</span><span class="token punctuation">,</span> <span class="token function">reverse</span><span class="token punctuation">(</span><span class="token string">&quot;hello welcome to golang&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u{1F680} \u7F16\u8BD1\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>Running<span class="token punctuation">]</span> go run <span class="token string">&quot;c:\\Users\\smile\\Desktop<span class="token entity" title="\\t">\\t</span>est<span class="token entity" title="\\f">\\f</span>uzz-demo<span class="token entity" title="\\r">\\r</span>everse.go&quot;</span>
\u53CD\u8F6C\u4E4B\u524D\uFF1A hello
\u53CD\u8F6C\u4E4B\u540E\uFF1A olleh
\u53CD\u8F6C\u4E4B\u524D\uFF1A hello welcome to golang
\u53CD\u8F6C\u4E4B\u540E\uFF1A gnalog ot emoclew olleh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u9700\u8981\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u9700\u8981\u6D4B\u8BD5" aria-hidden="true">#</a> \u9700\u8981\u6D4B\u8BD5</h2><p><strong>\u6211\u4EEC\u6D4B\u8BD5\u8FC7\u4E0A\u9762\u7684\u5B57\u7B26\u4E32\u662F\u6CA1\u6709\u95EE\u9898\u7684\uFF0C\u4F46\u662F\u600E\u4E48\u77E5\u9053\u6D4B\u8BD5\u5176\u4ED6\u7684\u5185\u5BB9\u4F1A\u4E0D\u4F1A\u51FA\u73B0\u95EE\u9898\u5462\uFF1F</strong></p><p>\u6211\u4EEC\u9700\u8981\u5355\u5143\u6D4B\u8BD5\uFF1A<code>reverse_test.go</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> Reverse<span class="token punctuation">[</span>T <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">(</span>s T<span class="token punctuation">)</span> T <span class="token punctuation">{</span>
	b <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
	<span class="token keyword">for</span> i<span class="token punctuation">,</span> j <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> j<span class="token punctuation">;</span> i<span class="token punctuation">,</span> j <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> j<span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">{</span>
		b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> b<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> b<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token function">T</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53CD\u8F6C\u4E4B\u524D\uFF1A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53CD\u8F6C\u4E4B\u540E\uFF1A&quot;</span><span class="token punctuation">,</span> <span class="token function">Reverse</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53CD\u8F6C\u4E4B\u524D\uFF1A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello welcome to golang&quot;</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53CD\u8F6C\u4E4B\u540E\uFF1A&quot;</span><span class="token punctuation">,</span> <span class="token function">Reverse</span><span class="token punctuation">(</span><span class="token string">&quot;hello welcome to golang&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u{1F680} \u7F16\u8BD1\u7ED3\u679C\u5982\u4E0B\uFF1A</p><details class="custom-container details"><summary>\u8865\u5145</summary><p>\u6309\u7406\u8BF4\u6211\u4EEC\u53EA\u9700\u8981 <code>go test</code> \u5C31\u53EF\u4EE5\u6267\u884C\u6D4B\u8BD5\u7528\u4F8B\uFF0C\u4F46\u662F\u6211\u4EEC\u62A5\u9519\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>directory <span class="token builtin class-name">.</span> is contained <span class="token keyword">in</span> a module that is not one of the workspace modules listed <span class="token keyword">in</span> go.work. You can <span class="token function">add</span> the module to the workspace using go work use <span class="token builtin class-name">.</span>
<span class="token comment"># \u76EE\u5F55\u4E2D\u3002\u5305\u542B\u5728\u4E0D\u662Fgo.work\u4E2D\u5217\u51FA\u7684\u5DE5\u4F5C\u7A7A\u95F4\u6A21\u5757\u4E4B\u4E00\u7684\u6A21\u5757\u4E2D\u3002\u60A8\u53EF\u4EE5\u4F7F\u7528go work use\u5C06\u6A21\u5757\u6DFB\u52A0\u5230\u5DE5\u4F5C\u533A\u3002</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u5982\u679C\u8981\u4F7F\u7528 <code>go work</code> \u4E0B\u7684\u6D4B\u8BD5\uFF0C\u6211\u4EEC\u9700\u8981\u52A0\u5165\u5230\u5DE5\u4F5C\u533A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> go work use .\\fuzz-demo\\
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>\u26A0\uFE0F \u5982\u679C\u662F\u5DE5\u4F5C\u533A\uFF0C\u6211\u4EEC\u53EF\u4EE5\u76F4\u63A5\u5728\u5DE5\u4F5C\u533A\u6D4B\u8BD5\uFF1A</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>go <span class="token builtin class-name">test</span> mszlu.com/fuzz-demo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></details><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>PS C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>smile<span class="token punctuation">\\</span>Desktop<span class="token punctuation">\\</span>test<span class="token punctuation">\\</span>fuzz-demo<span class="token operator">&gt;</span> go <span class="token builtin class-name">test</span>        
--- FAIL: TestReverse <span class="token punctuation">(</span><span class="token number">0</span>.00s<span class="token punctuation">)</span>
    reverse_test.go:27: reverse<span class="token punctuation">(</span><span class="token string">&quot;abc!def12321fedcba&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;abcdef12321fed!cba&quot;</span>, want <span class="token string">&quot;abc!def12321fedcba&quot;</span>
FAIL
<span class="token builtin class-name">exit</span> status <span class="token number">1</span>
FAIL    nsddd.top/fuzz-demo     <span class="token number">0</span>.235s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u662F\u7684\uFF0C\u6211\u7559\u4E0B\u4E86\u4E00\u4E2A\u5C0Fbug\uFF0C\u6211\u4EEC\u8BD5\u7740\u89E3\u51B3\u5B83\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">{</span><span class="token string">&quot;abc!def12321fedcba&quot;</span>, <span class="token string">&quot;abcdef12321fed!cba&quot;</span><span class="token punctuation">}</span>,
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u{1F680} \u7F16\u8BD1\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>PS C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>smile<span class="token punctuation">\\</span>Desktop<span class="token punctuation">\\</span>test<span class="token punctuation">\\</span>fuzz-demo<span class="token operator">&gt;</span> go <span class="token builtin class-name">test</span>
PASS
ok      nsddd.top/fuzz-demo     <span class="token number">0</span>.274s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><h2 id="\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898" aria-hidden="true">#</a> \u95EE\u9898</h2><p>\u5373\u4F7F\u6211\u4EEC\u770B\u8D77\u6765\u4E07\u65E0\u4E00\u5931\uFF0C\u4F46\u662F\u5B9E\u9645\u4E0A\u8FD8\u662F\u6709\u4E2A\u95EE\u9898\uFF0C\u5F53\u6211\u4EEC\u8F93\u5165\u4E2D\u6587\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u77E5\u9053\u6B64\u65F6\u7684<code>byte[]</code> \u662F\u5F88\u5F31\u9E21\u7684~</p><p>\u{1F4A1}\u7B80\u5355\u7684\u4E00\u4E2A\u6848\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>package main

<span class="token function">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;testing&quot;</span>
<span class="token punctuation">)</span>

func <span class="token function-name function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt.Println<span class="token punctuation">(</span><span class="token string">&quot;\u8FD9\u662Ffuzz-demo\u7684reverse_test.go&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

func TestReverse<span class="token punctuation">(</span>t *testing.T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	testcases :<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>struct <span class="token punctuation">{</span> //\u5B9A\u4E49\u4E00\u4E2A\u7ED3\u6784\u4F53\u6570\u7EC4
		in, want string //\u5206\u522B\u662F\u8F93\u5165\u548C\u671F\u671B\u8F93\u51FA
	<span class="token punctuation">}</span><span class="token punctuation">{</span>
		<span class="token punctuation">{</span><span class="token string">&quot;hello&quot;</span>, <span class="token string">&quot;olleh&quot;</span><span class="token punctuation">}</span>,
		<span class="token punctuation">{</span><span class="token string">&quot;hello welcome to golang&quot;</span>, <span class="token string">&quot;gnalog ot emoclew olleh&quot;</span><span class="token punctuation">}</span>,
		<span class="token punctuation">{</span><span class="token string">&quot;&quot;</span>, <span class="token string">&quot;&quot;</span><span class="token punctuation">}</span>,
		<span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span>, <span class="token string">&quot;a&quot;</span><span class="token punctuation">}</span>,
		<span class="token punctuation">{</span><span class="token string">&quot;ab&quot;</span>, <span class="token string">&quot;ba&quot;</span><span class="token punctuation">}</span>,
		<span class="token punctuation">{</span><span class="token string">&quot;abc!&quot;</span>, <span class="token string">&quot;!cba&quot;</span><span class="token punctuation">}</span>,
		<span class="token punctuation">{</span><span class="token string">&quot;abc!def12321fedcba&quot;</span>, <span class="token string">&quot;abcdef12321fed!cba&quot;</span><span class="token punctuation">}</span>,
		<span class="token punctuation">{</span><span class="token string">&quot;\u6211\u662F\u4E2D\u56FD\u4EBA&quot;</span>, <span class="token string">&quot;\u4EBA\u4E2D\u56FD\u662F\u6211&quot;</span><span class="token punctuation">}</span>,
	<span class="token punctuation">}</span>
	<span class="token keyword">for</span> _, c :<span class="token operator">=</span> range testcases <span class="token punctuation">{</span>
		got :<span class="token operator">=</span> reverse<span class="token punctuation">(</span>c.in<span class="token punctuation">)</span>
		<span class="token keyword">if</span> got <span class="token operator">!=</span> c.want <span class="token punctuation">{</span>
			t.Errorf<span class="token punctuation">(</span><span class="token string">&quot;reverse(%q) == %q, want %q&quot;</span>, c.in, got, c.want<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u{1F4A1}\u7B80\u5355\u7684\u4E00\u4E2A\u6848\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>PS C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>smile<span class="token punctuation">\\</span>Desktop<span class="token punctuation">\\</span>test<span class="token punctuation">\\</span>fuzz-demo<span class="token operator">&gt;</span> go <span class="token builtin class-name">test</span>
--- FAIL: TestReverse <span class="token punctuation">(</span><span class="token number">0</span>.00s<span class="token punctuation">)</span>
    reverse_test.go:28: reverse<span class="token punctuation">(</span><span class="token string">&quot;\u6211\u662F\u4E2D\u56FD\u4EBA&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;<span class="token entity" title="\\xba">\\xba</span><span class="token entity" title="\\xba">\\xba</span>\u4F5B\u5B78\u4BD8\u6448<span class="token entity" title="\\xe6">\\xe6</span>&quot;</span>, want <span class="token string">&quot;\u4EBA\u4E2D\u56FD\u662F\u6211&quot;</span>
FAIL
<span class="token builtin class-name">exit</span> status <span class="token number">1</span>
FAIL    nsddd.top/fuzz-demo     <span class="token number">0</span>.264s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container danger"><p class="custom-container-title">\u8B66\u544A</p><p>\u5F53\u7136\uFF0C\u6211\u4EEC\u7684\u76EE\u7684\u4E0D\u4EC5\u4EC5\u662F\u4E3A\u4E86\u89E3\u51B3\u5B83\uFF0C\u800C\u662F\u8BF4\u660E\u6211\u4EEC\u7684\u6D4B\u8BD5\u65B9\u6CD5\u6216\u8BB8\u53EF\u4EE5\u6539\u8FDB\uFF1B</p><p>\u6211\u4EEC\u53EF\u80FD\u5199\u4E0D\u4E86\u90A3\u4E48\u591A\u7684\u6D4B\u8BD5\u7528\u4F8B\uFF0C\u90A3\u4E48\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u6A21\u7CCA\u6D4B\u8BD5\u4E86</p></div><h2 id="\u6A21\u7CCA\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u6A21\u7CCA\u6D4B\u8BD5" aria-hidden="true">#</a> \u6A21\u7CCA\u6D4B\u8BD5</h2><p>\u{1F4A1}\u7B80\u5355\u7684\u4E00\u4E2A\u6848\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;testing&quot;</span>
	<span class="token string">&quot;unicode/utf8&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8FD9\u662Ffuzz-demo\u7684reverse_test.go&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">TestReverse</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	testcases <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">struct</span> <span class="token punctuation">{</span> <span class="token comment">//\u5B9A\u4E49\u4E00\u4E2A\u7ED3\u6784\u4F53\u6570\u7EC4</span>
		in<span class="token punctuation">,</span> want <span class="token builtin">string</span> <span class="token comment">//\u5206\u522B\u662F\u8F93\u5165\u548C\u671F\u671B\u8F93\u51FA</span>
	<span class="token punctuation">}</span><span class="token punctuation">{</span>
		<span class="token punctuation">{</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;olleh&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span><span class="token string">&quot;hello welcome to golang&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;gnalog ot emoclew olleh&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span><span class="token string">&quot;ab&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ba&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span><span class="token string">&quot;abc!&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;!cba&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span><span class="token string">&quot;abc!def12321fedcba&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;abcdef12321fed!cba&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token comment">// {&quot;\u6211\u662F\u4E2D\u56FD\u4EBA&quot;, &quot;\u4EBA\u4E2D\u56FD\u662F\u6211&quot;},</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> c <span class="token operator">:=</span> <span class="token keyword">range</span> testcases <span class="token punctuation">{</span>
		got <span class="token operator">:=</span> <span class="token function">Reverse</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>in<span class="token punctuation">)</span>
		<span class="token keyword">if</span> got <span class="token operator">!=</span> c<span class="token punctuation">.</span>want <span class="token punctuation">{</span>
			t<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;reverse(%q) == %q, want %q&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>in<span class="token punctuation">,</span> got<span class="token punctuation">,</span> c<span class="token punctuation">.</span>want<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">FuzzReverse</span><span class="token punctuation">(</span>f <span class="token operator">*</span>testing<span class="token punctuation">.</span>F<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// ...\u8FD9\u662F\u6A21\u7CCA\u6D4B\u8BD5\u7684\u4EE3\u7801</span>
	<span class="token comment">// \u6DFB\u52A0\u6D4B\u8BD5\u96C6</span>
	testcases <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello welcome to golang&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;123124&quot;</span><span class="token punctuation">}</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> c <span class="token operator">:=</span> <span class="token keyword">range</span> testcases <span class="token punctuation">{</span>
		<span class="token comment">//\u6DFB\u52A0\u6D4B\u8BD5\u96C6</span>
		f<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	f<span class="token punctuation">.</span><span class="token function">Fuzz</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">,</span> a <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		got <span class="token operator">:=</span> <span class="token function">Reverse</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
		inRevers <span class="token operator">:=</span> <span class="token function">Reverse</span><span class="token punctuation">(</span>got<span class="token punctuation">)</span> <span class="token comment">//\u53CD\u8F6C\u4E24\u6B21\uFF0C\u5E94\u8BE5\u548C\u539F\u6765\u7684\u4E00\u6837(a == inRevers)</span>
		<span class="token keyword">if</span> got <span class="token operator">==</span> inRevers <span class="token punctuation">{</span>
			t<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;reverse(%q) == %q, want %q&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> got<span class="token punctuation">,</span> a<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> utf8<span class="token punctuation">.</span><span class="token function">ValidString</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>utf8<span class="token punctuation">.</span><span class="token function">ValidString</span><span class="token punctuation">(</span>got<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			t<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;Reverse produced invalid UTF-8 string: %q&quot;</span><span class="token punctuation">,</span> got<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u{1F680} \u7F16\u8BD1\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="custom-container tip"><p class="custom-container-title">\u6267\u884C\u65B9\u6CD5</p><p>\u6267\u884C\u6240\u6709 Fuzz \u5F00\u5934\u7684\u6A21\u7CCA\u6D4B\u8BD5\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code> go <span class="token builtin class-name">test</span> <span class="token parameter variable">-fuzz</span><span class="token operator">=</span>Fuzz  <span class="token comment"># \u6267\u884C\u6240\u6709 Fuzz \u5F00\u5934\u7684\u6A21\u7CCA\u6D4B\u8BD5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>PS C:\\Users\\smile\\Desktop\\test\\fuzz-demo&gt; go test -fuzz=Fuzz
--- FAIL: TestReverse (0.00s)
    reverse_test.go:29: reverse(&quot;\u6211\u662F\u4E2D\u56FD\u4EBA&quot;) == &quot;\\xba\\xba\u4F5B\u5B78\u4BD8\u6448\\xe6&quot;, want &quot;\u4EBA\u4E2D\u56FD\u662F\u6211&quot;
FAIL
exit status 1
FAIL    nsddd.top/fuzz-demo     0.268s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="end-\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#end-\u94FE\u63A5" aria-hidden="true">#</a> END \u94FE\u63A5</h2>`,35),j=s("\u56DE\u5230\u76EE\u5F55"),A=s("\u4E0A\u4E00\u8282"),C=s("\u4E0B\u4E00\u8282"),I=n("hr",null,null,-1),E={href:"https://github.com/3293172751/Block_Chain/blob/master/Git/git-contributor.md",target:"_blank",rel:"noopener noreferrer"},S=s("\u53C2\u4E0E\u8D21\u732E\u2764\uFE0F\u{1F495}\u{1F495}");function D(B,U){const t=p("ExternalLinkIcon"),e=p("RouterLink");return i(),l("div",null,[n("ul",null,[n("li",null,[n("a",d,[k,a(t)])])]),v,n("ul",null,[n("li",null,[a(e,{to:"/go-advancend/"},{default:o(()=>[m]),_:1})]),n("li",null,[a(e,{to:"/go-advancend/markdown/17.html"},{default:o(()=>[b]),_:1})])]),n("blockquote",null,[n("p",null,[g,n("a",h,[q,a(t)])])]),n("h3",f,[_,w,n("strong",null,[n("a",y,[x,a(t)])])]),n("h3",z,[R,T,n("strong",null,[n("a",F,[P,a(t)])])]),L,n("ul",null,[n("li",null,[a(e,{to:"/go-advancend/"},{default:o(()=>[j]),_:1})]),n("li",null,[a(e,{to:"/go-advancend/markdown/17.html"},{default:o(()=>[A]),_:1})]),n("li",null,[a(e,{to:"/go-advancend/markdown/19.html"},{default:o(()=>[C]),_:1})])]),I,n("ul",null,[n("li",null,[n("a",E,[S,a(t)])])])])}const G=c(r,[["render",D],["__file","18.html.vue"]]);export{G as default};
