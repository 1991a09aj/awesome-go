import{_ as o,r as p,o as c,c as i,a as n,b as a,w as l,e as u,d as s}from"./app.2cadb53f.js";const k={},r=u(`<h1 id="_1-\u52A0\u5BC6\u89E3\u5BC6" tabindex="-1"><a class="header-anchor" href="#_1-\u52A0\u5BC6\u89E3\u5BC6" aria-hidden="true">#</a> 1. \u52A0\u5BC6\u89E3\u5BC6</h1><h3 id="_1-1-1-aes-\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#_1-1-1-aes-\u7B80\u4ECB" aria-hidden="true">#</a> 1.1.1. AES \u7B80\u4ECB</h3><p>\u9AD8\u7EA7\u52A0\u5BC6\u6807\u51C6\uFF08\u82F1\u8BEDAdvanced Encryption Standard\uFF0C\u7F29\u5199AES\uFF09\u5728\u5BC6\u7801\u5B66\u4E2D\u53C8\u79F0 Rijndael \u52A0\u5BC6\u6CD5\uFF0C\u662F\u7F8E\u56FD\u8054\u90A6\u653F\u5E9C\u91C7\u7528\u7684\u4E00\u79CD\u533A\u5757\u52A0\u5BC6\u6807\u51C6\u3002\u8FD9\u4E2A\u6807\u51C6\u7528\u6765\u66FF\u4EE3\u539F\u5148\u7684 DES\uFF0C\u5DF2\u7ECF\u88AB\u591A\u65B9\u5206\u6790\u4E14\u5E7F\u4E3A\u5168\u4E16\u754C\u6240\u4F7F\u7528\u3002\u7ECF\u8FC7\u4E94\u5E74\u7684\u7504\u9009\u6D41\u7A0B\uFF0C\u9AD8\u7EA7\u52A0\u5BC6\u6807\u51C6\u7531\u7F8E\u56FD\u56FD\u5BB6\u6807\u51C6\u4E0E\u6280\u672F\u7814\u7A76\u9662\uFF08NIST\uFF09\u4E8E 2001 \u5E74 11 \u6708 26 \u65E5\u53D1\u5E03\u4E8E FIPS PUB 197\uFF0C\u5E76\u5728 2002 \u5E74 5 \u6708 26 \u65E5\u6210\u4E3A\u6709\u6548\u7684\u6807\u51C6\u30022006 \u5E74\uFF0C\u9AD8\u7EA7\u52A0\u5BC6\u6807\u51C6\u5DF2\u7136\u6210\u4E3A\u5BF9\u79F0\u5BC6\u94A5\u52A0\u5BC6\u4E2D\u6700\u6D41\u884C\u7684\u7B97\u6CD5\u4E4B\u4E00\u3002</p><p>\u8BE5\u7B97\u6CD5\u4E3A\u6BD4\u5229\u65F6\u5BC6\u7801\u5B66\u5BB6 Joan Daemen \u548C Vincent Rijmen \u6240\u8BBE\u8BA1\uFF0C\u7ED3\u5408\u4E24\u4F4D\u4F5C\u8005\u7684\u540D\u5B57\uFF0C\u4EE5 Rijndael \u4E3A\u540D\u6295\u7A3F\u9AD8\u7EA7\u52A0\u5BC6\u6807\u51C6\u7684\u7504\u9009\u6D41\u7A0B\u3002\uFF08Rijndael \u7684\u53D1\u97F3\u8FD1\u4E8E &quot;Rhine doll&quot;\uFF09</p><h3 id="_1-1-2-aes-\u7279\u70B9" tabindex="-1"><a class="header-anchor" href="#_1-1-2-aes-\u7279\u70B9" aria-hidden="true">#</a> 1.1.2. AES \u7279\u70B9</h3><table><thead><tr><th>\u9879\u76EE</th><th>\u8BF4\u660E</th><th>\u5907\u6CE8</th></tr></thead><tbody><tr><td>\u5BC6\u94A5\u957F\u5EA6</td><td>128\u4F4D\uFF0816Byte\uFF09\u3001192\u4F4D\uFF0824Byte\uFF09\u3001256\u4F4D\uFF0832Byte\uFF09</td><td>\u9ED8\u8BA4\uFF1A128\u4F4D</td></tr><tr><td>\u5206\u7EC4\u5BC6\u7801\u5DE5\u4F5C\u6A21\u5F0F</td><td>ECB,CBC,PCBC,CTR,CTS,CFB,CFB8 \u81F3 CFB128,OFB,OFB8 \u81F3 OFB128</td><td></td></tr><tr><td>\u586B\u5145\u65B9\u5F0F</td><td>NoPadding, ISO10126Padding, OAEPPadding, PKCS1Padding, PKCS5Padding, SSL3Padding</td><td></td></tr></tbody></table><p>\u91C7\u7528\u4E0D\u540C\u7684\u5DE5\u4F5C\u6A21\u5F0F\uFF08\u5206\u7EC4\u5BC6\u7801\u5DE5\u4F5C\u6A21\u5F0F\uFF09\uFF0C\u53EF\u80FD\u4F1A\u6D89\u53CA\u5230 \u521D\u59CB\u5316\u5411\u91CF\uFF08IV\uFF09 \u548C \u586B\u5145\u6A21\u5F0F \u7684\u9009\u62E9\u3002</p><p>\u5728\u5BC6\u7801\u5B66\u4E2D\uFF0C\u4E00\u4E2A\u5BC6\u94A5\u53EA\u80FD\u52A0\u5BC6\u957F\u5EA6\u7B49\u4E8E\u5BC6\u94A5\u957F\u5EA6\u7684\u6570\u636E\u3002</p><p>\u4E3A\u4E86\u52A0\u5BC6\u66F4\u591A\u7684\u6570\u636E\uFF0C\u9700\u8981\u5BF9\u6570\u636E\u8FDB\u884C\u5408\u7406\u7684\u5206\u7EC4\u3002</p><p>\u5206\u7EC4\u5BC6\u7801\u5DE5\u4F5C\u6A21\u5F0F\u5219\u662F\u6309\u7167\u4E0D\u540C\u7684\u5BC6\u7801\u89C4\u5219\u8FDB\u884C\u5206\u7EC4\uFF08\u7528\u4E8E\u52A0\u5BC6\u548C\u8BA4\u8BC1\uFF09\u3002</p><p>\u6700\u540E\u4E00\u5757\u6570\u636E\u957F\u5EA6\u4E0D\u8DB3\u5BC6\u94A5\u957F\u5EA6\u65F6\uFF0C\u5219\u9700\u8981\u4F7F\u7528\u5408\u9002\u7684 \u586B\u5145\u6A21\u5F0F \u8FDB\u884C\u586B\u5145\uFF0C\u7136\u540E\u52A0\u5165\u5904\u7406\u3002</p><p>\u5206\u7EC4\u8FC7\u7A0B\u4E2D\u901A\u5E38\u8FD8\u4F1A\u52A0\u5165\u521D\u59CB\u5316\u5411\u91CF\u8FDB\u884C\u968F\u673A\u5316\uFF0C\u4EE5\u4FDD\u8BC1\u5B89\u5168\u3002</p><p>\u793A\u4F8B\u4EE3\u7801\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;bytes&quot;</span>
    <span class="token string">&quot;crypto/aes&quot;</span>
    <span class="token string">&quot;crypto/cipher&quot;</span>
    <span class="token string">&quot;encoding/base64&quot;</span>
    <span class="token string">&quot;errors&quot;</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">//\u9AD8\u7EA7\u52A0\u5BC6\u6807\u51C6\uFF08Adevanced Encryption Standard ,AES\uFF09</span>

<span class="token comment">//16,24,32\u4F4D\u5B57\u7B26\u4E32\u7684\u8BDD\uFF0C\u5206\u522B\u5BF9\u5E94AES-128\uFF0CAES-192\uFF0CAES-256 \u52A0\u5BC6\u65B9\u6CD5</span>
<span class="token comment">//key\u4E0D\u80FD\u6CC4\u9732</span>
<span class="token keyword">var</span> PwdKey <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;DIS**#KKKDJJSKDI&quot;</span><span class="token punctuation">)</span>

<span class="token comment">//PKCS7 \u586B\u5145\u6A21\u5F0F</span>
<span class="token keyword">func</span> <span class="token function">PKCS7Padding</span><span class="token punctuation">(</span>ciphertext <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> blockSize <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span> <span class="token punctuation">{</span>
    padding <span class="token operator">:=</span> blockSize <span class="token operator">-</span> <span class="token function">len</span><span class="token punctuation">(</span>ciphertext<span class="token punctuation">)</span><span class="token operator">%</span>blockSize
    <span class="token comment">//Repeat()\u51FD\u6570\u7684\u529F\u80FD\u662F\u628A\u5207\u7247[]byte{byte(padding)}\u590D\u5236padding\u4E2A\uFF0C\u7136\u540E\u5408\u5E76\u6210\u65B0\u7684\u5B57\u8282\u5207\u7247\u8FD4\u56DE</span>
    padtext <span class="token operator">:=</span> bytes<span class="token punctuation">.</span><span class="token function">Repeat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span><span class="token function">byte</span><span class="token punctuation">(</span>padding<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> padding<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token function">append</span><span class="token punctuation">(</span>ciphertext<span class="token punctuation">,</span> padtext<span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u586B\u5145\u7684\u53CD\u5411\u64CD\u4F5C\uFF0C\u5220\u9664\u586B\u5145\u5B57\u7B26\u4E32</span>
<span class="token keyword">func</span> <span class="token function">PKCS7UnPadding</span><span class="token punctuation">(</span>origData <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u83B7\u53D6\u6570\u636E\u957F\u5EA6</span>
    length <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>origData<span class="token punctuation">)</span>
    <span class="token keyword">if</span> length <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;\u52A0\u5BC6\u5B57\u7B26\u4E32\u9519\u8BEF\uFF01&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u83B7\u53D6\u586B\u5145\u5B57\u7B26\u4E32\u957F\u5EA6</span>
        unpadding <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>origData<span class="token punctuation">[</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token comment">//\u622A\u53D6\u5207\u7247\uFF0C\u5220\u9664\u586B\u5145\u5B57\u8282\uFF0C\u5E76\u4E14\u8FD4\u56DE\u660E\u6587</span>
        <span class="token keyword">return</span> origData<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">(</span>length <span class="token operator">-</span> unpadding<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u5B9E\u73B0\u52A0\u5BC6</span>
<span class="token keyword">func</span> <span class="token function">AesEcrypt</span><span class="token punctuation">(</span>origData <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> key <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u521B\u5EFA\u52A0\u5BC6\u7B97\u6CD5\u5B9E\u4F8B</span>
    block<span class="token punctuation">,</span> err <span class="token operator">:=</span> aes<span class="token punctuation">.</span><span class="token function">NewCipher</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>
    <span class="token comment">//\u83B7\u53D6\u5757\u7684\u5927\u5C0F</span>
    blockSize <span class="token operator">:=</span> block<span class="token punctuation">.</span><span class="token function">BlockSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">//\u5BF9\u6570\u636E\u8FDB\u884C\u586B\u5145\uFF0C\u8BA9\u6570\u636E\u957F\u5EA6\u6EE1\u8DB3\u9700\u6C42</span>
    origData <span class="token operator">=</span> <span class="token function">PKCS7Padding</span><span class="token punctuation">(</span>origData<span class="token punctuation">,</span> blockSize<span class="token punctuation">)</span>
    <span class="token comment">//\u91C7\u7528AES\u52A0\u5BC6\u65B9\u6CD5\u4E2DCBC\u52A0\u5BC6\u6A21\u5F0F</span>
    blocMode <span class="token operator">:=</span> cipher<span class="token punctuation">.</span><span class="token function">NewCBCEncrypter</span><span class="token punctuation">(</span>block<span class="token punctuation">,</span> key<span class="token punctuation">[</span><span class="token punctuation">:</span>blockSize<span class="token punctuation">]</span><span class="token punctuation">)</span>
    crypted <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>origData<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">//\u6267\u884C\u52A0\u5BC6</span>
    blocMode<span class="token punctuation">.</span><span class="token function">CryptBlocks</span><span class="token punctuation">(</span>crypted<span class="token punctuation">,</span> origData<span class="token punctuation">)</span>
    <span class="token keyword">return</span> crypted<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u5B9E\u73B0\u89E3\u5BC6</span>
<span class="token keyword">func</span> <span class="token function">AesDeCrypt</span><span class="token punctuation">(</span>cypted <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> key <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u521B\u5EFA\u52A0\u5BC6\u7B97\u6CD5\u5B9E\u4F8B</span>
    block<span class="token punctuation">,</span> err <span class="token operator">:=</span> aes<span class="token punctuation">.</span><span class="token function">NewCipher</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>
    <span class="token comment">//\u83B7\u53D6\u5757\u5927\u5C0F</span>
    blockSize <span class="token operator">:=</span> block<span class="token punctuation">.</span><span class="token function">BlockSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">//\u521B\u5EFA\u52A0\u5BC6\u5BA2\u6237\u7AEF\u5B9E\u4F8B</span>
    blockMode <span class="token operator">:=</span> cipher<span class="token punctuation">.</span><span class="token function">NewCBCDecrypter</span><span class="token punctuation">(</span>block<span class="token punctuation">,</span> key<span class="token punctuation">[</span><span class="token punctuation">:</span>blockSize<span class="token punctuation">]</span><span class="token punctuation">)</span>
    origData <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>cypted<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">//\u8FD9\u4E2A\u51FD\u6570\u4E5F\u53EF\u4EE5\u7528\u6765\u89E3\u5BC6</span>
    blockMode<span class="token punctuation">.</span><span class="token function">CryptBlocks</span><span class="token punctuation">(</span>origData<span class="token punctuation">,</span> cypted<span class="token punctuation">)</span>
    <span class="token comment">//\u53BB\u9664\u586B\u5145\u5B57\u7B26\u4E32</span>
    origData<span class="token punctuation">,</span> err <span class="token operator">=</span> <span class="token function">PKCS7UnPadding</span><span class="token punctuation">(</span>origData<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> origData<span class="token punctuation">,</span> err
<span class="token punctuation">}</span>

<span class="token comment">//\u52A0\u5BC6base64</span>
<span class="token keyword">func</span> <span class="token function">EnPwdCode</span><span class="token punctuation">(</span>pwd <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">AesEcrypt</span><span class="token punctuation">(</span>pwd<span class="token punctuation">,</span> PwdKey<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> base64<span class="token punctuation">.</span>StdEncoding<span class="token punctuation">.</span><span class="token function">EncodeToString</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">,</span> err
<span class="token punctuation">}</span>

<span class="token comment">//\u89E3\u5BC6</span>
<span class="token keyword">func</span> <span class="token function">DePwdCode</span><span class="token punctuation">(</span>pwd <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u89E3\u5BC6base64\u5B57\u7B26\u4E32</span>
    pwdByte<span class="token punctuation">,</span> err <span class="token operator">:=</span> base64<span class="token punctuation">.</span>StdEncoding<span class="token punctuation">.</span><span class="token function">DecodeString</span><span class="token punctuation">(</span>pwd<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>
    <span class="token comment">//\u6267\u884CAES\u89E3\u5BC6</span>
    <span class="token keyword">return</span> <span class="token function">AesDeCrypt</span><span class="token punctuation">(</span>pwdByte<span class="token punctuation">,</span> PwdKey<span class="token punctuation">)</span>

<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    str <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;12fff\u6211\u662Fww.topgoer.com\u7684\u7AD9\u957F\u67AF\u85E4&quot;</span><span class="token punctuation">)</span>
    pwd<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> <span class="token function">EnPwdCode</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    bytes<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> <span class="token function">DePwdCode</span><span class="token punctuation">(</span>pwd<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="end-\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#end-\u94FE\u63A5" aria-hidden="true">#</a> END \u94FE\u63A5</h2><ul><li><div><a href="78.md" style="float:left;">\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517}</a><a href="80.md" style="float:right;">\u2B07\uFE0F\u4E0B\u4E00\u8282\u{1F517}</a></div></li></ul>`,16),d=s("\u24C2\uFE0F\u56DE\u5230\u9996\u9875\u{1F3E0}"),v={href:"https://nsddd.top/archives/contributors",target:"_blank",rel:"noopener noreferrer"},b=n("strong",null,"\u{1FAF5}\u53C2\u4E0E\u8D21\u732E\u{1F49E}\u2764\uFE0F\u200D\u{1F525}\u{1F496}",-1),m=s(")"),y=s("\u2734\uFE0F\u7248\u6743\u58F0\u660E \xA9 :\u672C\u4E66\u6240\u6709\u5185\u5BB9\u9075\u5FAA"),f={href:"http://zh.wikipedia.org/wiki/Wikipedia:CC-by-sa-3.0%E5%8D%8F%E8%AE%AE%E6%96%87%E6%9C%AC",target:"_blank",rel:"noopener noreferrer"},g=s("CC-BY-SA 3.0\u534F\u8BAE\uFF08\u7F72\u540D-\u76F8\u540C\u65B9\u5F0F\u5171\u4EAB\uFF09\xA9");function h(w,_){const e=p("RouterLink"),t=p("ExternalLinkIcon");return c(),i("div",null,[r,n("ul",null,[n("li",null,[n("p",null,[a(e,{to:"/Gomd_super/"},{default:l(()=>[d]),_:1})])]),n("li",null,[n("p",null,[n("a",v,[b,a(t)]),m])]),n("li",null,[n("p",null,[y,n("a",f,[g,a(t)])])])])])}const C=o(k,[["render",h],["__file","79.html.vue"]]);export{C as default};
