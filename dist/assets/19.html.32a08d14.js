import{_ as c,r as o,o as i,c as l,a as n,b as a,w as e,e as s,d as u}from"./app.5500aabf.js";const r={},k={href:"https://github.com/3293172751",target:"_blank",rel:"noopener noreferrer"},d=s("author"),m=n("h1",{id:"\u7B2C19\u8282-go-\u5B9E\u73B0-ping",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7B2C19\u8282-go-\u5B9E\u73B0-ping","aria-hidden":"true"},"#"),s(" \u7B2C19\u8282 go \u5B9E\u73B0 ping")],-1),v=s("\u56DE\u5230\u76EE\u5F55"),b=s("\u4E0A\u4E00\u8282"),g=s("\u2764\uFE0F\u{1F495}\u{1F495}Go\u8BED\u8A00\u9AD8\u7EA7\u7BC7\u7AE0,\u5728\u6B64\u4E4B\u524D\u5EFA\u8BAE\u60A8\u5148\u4E86\u89E3\u57FA\u7840\u548C\u8FDB\u9636\u7BC7\u3002Myblog:"),f={href:"http://nsddd.top/",target:"_blank",rel:"noopener noreferrer"},h=s("http://nsddd.top"),q={id:"go\u8BED\u8A00\u57FA\u7840\u7BC7",tabindex:"-1"},y=n("a",{class:"header-anchor",href:"#go\u8BED\u8A00\u57FA\u7840\u7BC7","aria-hidden":"true"},"#",-1),w=s(),_={href:"https://github.com/3293172751/Block_Chain/blob/master/TOC.md",target:"_blank",rel:"noopener noreferrer"},x=s("Go\u8BED\u8A00\u57FA\u7840\u7BC7"),P={id:"go\u8BED\u8A00100\u7BC7\u8FDB\u9636",tabindex:"-1"},I=n("a",{class:"header-anchor",href:"#go\u8BED\u8A00100\u7BC7\u8FDB\u9636","aria-hidden":"true"},"#",-1),C=s(),T={href:"https://github.com/3293172751/Block_Chain/blob/master/Gomd_super/README.md",target:"_blank",rel:"noopener noreferrer"},S=s("Go\u8BED\u8A00100\u7BC7\u8FDB\u9636"),M=n("hr",null,null,-1),A=n("p",null,"[TOC]",-1),D=n("h2",{id:"icmp",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#icmp","aria-hidden":"true"},"#"),s(" ICMP")],-1),V=n("h3",{id:"icmp\u3068\u306F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#icmp\u3068\u306F","aria-hidden":"true"},"#"),s(" ICMP\u3068\u306F\uFF1F")],-1),B=n("ol",null,[n("li",null,"ICMP\uFF08\u4E92\u8054\u7F51\u63A7\u5236\u6D88\u606F\u534F\u8BAE\uFF09\u662F IP \u534F\u8BAE\u7684\u201C\u9519\u8BEF\u901A\u77E5\u201D\u548C\u201C\u63A7\u5236\u6D88\u606F\u201D"),n("li",null,"\u7528\u4E8E\u4F20\u8F93 \u7684\u534F\u8BAE\u3002 \u68C0\u67E5\u5B9E\u73B0 TCP/IP \u7684\u8BA1\u7B97\u673A\u4E4B\u95F4\u7684\u901A\u4FE1\u72B6\u6001"),n("li",null,"\u4F7F\u7528\u3002 ICMP \u662F\u4E00\u79CD\u5728\u4E92\u8054\u7F51\u5C42\uFF08OSI \u53C2\u8003\u6A21\u578B\u7684\u7F51\u7EDC\u5C42\uFF09\u4E0A\u8FD0\u884C\u7684\u534F\u8BAE\u3002")],-1),N={class:"custom-container tip"},L=n("p",{class:"custom-container-title"},"\u63A8\u8350 ICMP \u7684\u529F\u80FD\u4E0E\u4F7F\u7528",-1),z={href:"https://github.com/cubxxw/cs-awesome-Block_Chain/blob/master/web/markdown/20.md",target:"_blank",rel:"noopener noreferrer"},R=s("https://github.com/cubxxw/cs-awesome-Block_Chain/blob/master/web/markdown/20.md"),E=u(`<h3 id="\u62A5\u6587\u5934" tabindex="-1"><a class="header-anchor" href="#\u62A5\u6587\u5934" aria-hidden="true">#</a> \u62A5\u6587\u5934</h3><p>ICMP\u62A5\u5934\u4ECEIP\u62A5\u5934\u7684\u7B2C160\u4F4D\u5F00\u59CB\uFF08IP\u9996\u90E820\u5B57\u8282\uFF09\uFF08\u9664\u975E\u4F7F\u7528\u4E86IP\u62A5\u5934\u7684\u53EF\u9009\u90E8\u5206\uFF09\u3002</p><table><thead><tr><th style="text-align:center;">Bits</th><th style="text-align:center;">160-167</th><th style="text-align:center;">168-175</th><th style="text-align:center;">176-183</th><th style="text-align:center;">184-191</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>160</strong></td><td style="text-align:center;">Type</td><td style="text-align:center;">Code</td><td style="text-align:center;">\u6821\u9A8C\u7801\uFF08checksum\uFF09</td><td style="text-align:center;">\u6821\u9A8C\u7801\uFF08checksum\uFF09</td></tr><tr><td style="text-align:center;"><strong>192</strong></td><td style="text-align:center;">Rest of Header</td><td style="text-align:center;">Rest of Header</td><td style="text-align:center;">Rest of Header</td><td style="text-align:center;">Rest of Header</td></tr></tbody></table><img src="http://sm.nsddd.top/smasdasdf.png" alt="TCP/IP\u534F\u8BAE\u65CF\u7684\u7F51\u7EDC\u5C42\u57FA\u7840\uFF085\uFF09\u2014\u2014ICMP\u534F\u8BAE\u4EE5\u53CAping\u547D\u4EE4_TLpigff\u7684\u535A\u5BA2-CSDN\u535A\u5BA2" style="zoom:150%;"><h3 id="icmp-\u7684\u683C\u5F0F" tabindex="-1"><a class="header-anchor" href="#icmp-\u7684\u683C\u5F0F" aria-hidden="true">#</a> ICMP \u7684\u683C\u5F0F</h3><p>ICMP \u6D88\u606F\u7531\u56DB\u4E2A\u5B57\u6BB5\u7EC4\u6210\uFF1A\u7C7B\u578B\u3001\u4EE3\u7801\u3001\u6821\u9A8C\u548C\u548C\u548C\u6570\u636E\u3002</p><table><thead><tr><th>\u6BCF\u4E2A\u5B57\u6BB5</th><th>\u82F1\u8BED\u7B26\u53F7</th><th>\u4F4D\u6570</th><th>\u6BCF\u4E2A\u5B57\u6BB5\u7684\u8BF4\u660E</th></tr></thead><tbody><tr><td>\u7C7B\u578B</td><td>Type</td><td>8 bit</td><td>\u5305\u542B ICMP \u6D88\u606F\u7684\u529F\u80FD\u7C7B\u578B\u503C\u3002 \u503C\u89C1\u4E0B\u8868\u3002</td></tr><tr><td>\u4EE3\u7801</td><td>Code</td><td>8 bit</td><td>\u5305\u542B ICMP \u6D88\u606F\u7684\u8BE6\u7EC6\u529F\u80FD\u4EE3\u7801\u7684\u503C\u3002 \u503C\u89C1\u4E0B\u8868\u3002</td></tr><tr><td>\u6821\u9A8C\u548C</td><td>Checksum</td><td>16 bit</td><td>\u68C0\u67E5\u662F\u5426\u5B58\u5728\u9519\u8BEF\u3002</td></tr><tr><td>\u4E3B\u9898</td><td>Data</td><td>\u53EF\u53D8\u957F\u5EA6</td><td>\u957F\u5EA6\u56E0 ICMP \u7684\u201C\u7C7B\u578B\u201D\u800C\u5F02\u3002</td></tr></tbody></table><h2 id="go\u8BED\u8A00\u5B9E\u73B0-ping-\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#go\u8BED\u8A00\u5B9E\u73B0-ping-\u64CD\u4F5C" aria-hidden="true">#</a> Go\u8BED\u8A00\u5B9E\u73B0 Ping \u64CD\u4F5C</h2><div class="custom-container tip"><p class="custom-container-title">\u6B65\u9AA4</p><ol><li>ping \u64CD\u4F5C\u539F\u7406 ICMP</li><li>\u5B9E\u73B0 ping \u64CD\u4F5C\u7684\u4E24\u4E2A\u5173\u952E\u70B9</li><li>ping \u64CD\u4F5C</li></ol></div><p>\u6211\u4EEC\u5E0C\u671B\u53EF\u4EE5\u53D1\u9001 64 \u5B57\u8282\u7684\u6570\u636E <code>-l 64</code></p><h3 id="flag-\u7684\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#flag-\u7684\u4F5C\u7528" aria-hidden="true">#</a> flag \u7684\u4F5C\u7528</h3><p>Go\u8BED\u8A00\u5185\u7F6E\u7684<code>flag</code>\u5305\u5B9E\u73B0\u4E86\u547D\u4EE4\u884C\u53C2\u6570\u7684\u89E3\u6790\uFF0C<code>flag</code>\u5305\u4F7F\u5F97\u5F00\u53D1\u547D\u4EE4\u884C\u5DE5\u5177\u66F4\u4E3A\u7B80\u5355\u3002</p><p><strong>\u53EF\u4EE5\u7B80\u5355\u7684\u83B7\u53D6\u547D\u4EE4\u884C\u53C2\u6570\uFF1A</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;os&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">//os.Args demo</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//os.Args\u662F\u4E00\u4E2A[]string</span>
	<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Args<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> index<span class="token punctuation">,</span> arg <span class="token operator">:=</span> <span class="token keyword">range</span> os<span class="token punctuation">.</span>Args <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;args[%d]=%v\\n&quot;</span><span class="token punctuation">,</span> index<span class="token punctuation">,</span> arg<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u{1F680} \u7F16\u8BD1\u7ED3\u679C\u5982\u4E0B\uFF1A</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>PS D:<span class="token punctuation">\\</span>\u6587\u6863<span class="token punctuation">\\</span>\u6700\u8FD1\u7684<span class="token punctuation">\\</span>awesome-golang<span class="token punctuation">\\</span>docs<span class="token punctuation">\\</span>code<span class="token punctuation">\\</span>go-super<span class="token operator">&gt;</span> go run  .<span class="token punctuation">\\</span><span class="token number">74</span>-main.go wefa     
args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>smile<span class="token punctuation">\\</span>AppData<span class="token punctuation">\\</span>Local<span class="token punctuation">\\</span>Temp<span class="token punctuation">\\</span>go-build1593224315<span class="token punctuation">\\</span>b001<span class="token punctuation">\\</span>exe<span class="token punctuation">\\</span><span class="token number">74</span>-main.exe
args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>wefa
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u662F\u4E0D\u662F\u53EF\u4EE5\u548C\u6211\u4EEC\u4E4B\u524D\u7684Cobra\u8054\u5408\u8D77\u6765\u4E86\uFF0C\u6216\u8BB8\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 Cobra \u5BF9\u5427~</p></div><h3 id="lag-type" tabindex="-1"><a class="header-anchor" href="#lag-type" aria-hidden="true">#</a> lag.Type()</h3><p>\u57FA\u672C\u683C\u5F0F\u5982\u4E0B\uFF1A</p><p><code>flag.Type(flag\u540D, \u9ED8\u8BA4\u503C, \u5E2E\u52A9\u4FE1\u606F)*Type</code> \u4F8B\u5982\u6211\u4EEC\u8981\u5B9A\u4E49\u59D3\u540D\u3001\u5E74\u9F84\u3001\u5A5A\u5426\u4E09\u4E2A\u547D\u4EE4\u884C\u53C2\u6570\uFF0C\u6211\u4EEC\u53EF\u4EE5\u6309\u5982\u4E0B\u65B9\u5F0F\u5B9A\u4E49\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>name <span class="token operator">:=</span> flag<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u59D3\u540D&quot;</span><span class="token punctuation">)</span>
age <span class="token operator">:=</span> flag<span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5E74\u9F84&quot;</span><span class="token punctuation">)</span>
married <span class="token operator">:=</span> flag<span class="token punctuation">.</span><span class="token function">Bool</span><span class="token punctuation">(</span><span class="token string">&quot;married&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5A5A\u5426&quot;</span><span class="token punctuation">)</span>
delay <span class="token operator">:=</span> flag<span class="token punctuation">.</span><span class="token function">Duration</span><span class="token punctuation">(</span><span class="token string">&quot;delay&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;\u65F6\u95F4\u95F4\u9694&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u6B64\u65F6<code>name</code>\u3001<code>age</code>\u3001<code>married</code>\u3001<code>delay</code>\u5747\u4E3A\u5BF9\u5E94\u7C7B\u578B\u7684\u6307\u9488\u3002</p><h3 id="flag-typevar" tabindex="-1"><a class="header-anchor" href="#flag-typevar" aria-hidden="true">#</a> flag.TypeVar()</h3><p>\u57FA\u672C\u683C\u5F0F\u5982\u4E0B\uFF1A <code>flag.TypeVar(Type\u6307\u9488, flag\u540D, \u9ED8\u8BA4\u503C, \u5E2E\u52A9\u4FE1\u606F)</code> \u4F8B\u5982\u6211\u4EEC\u8981\u5B9A\u4E49\u59D3\u540D\u3001\u5E74\u9F84\u3001\u5A5A\u5426\u4E09\u4E2A\u547D\u4EE4\u884C\u53C2\u6570\uFF0C\u6211\u4EEC\u53EF\u4EE5\u6309\u5982\u4E0B\u65B9\u5F0F\u5B9A\u4E49\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> name <span class="token builtin">string</span>
<span class="token keyword">var</span> age <span class="token builtin">int</span>
<span class="token keyword">var</span> married <span class="token builtin">bool</span>
<span class="token keyword">var</span> delay time<span class="token punctuation">.</span>Duration
flag<span class="token punctuation">.</span><span class="token function">StringVar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>name<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u59D3\u540D&quot;</span><span class="token punctuation">)</span>
flag<span class="token punctuation">.</span><span class="token function">IntVar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>age<span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5E74\u9F84&quot;</span><span class="token punctuation">)</span>
flag<span class="token punctuation">.</span><span class="token function">BoolVar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>married<span class="token punctuation">,</span> <span class="token string">&quot;married&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5A5A\u5426&quot;</span><span class="token punctuation">)</span>
flag<span class="token punctuation">.</span><span class="token function">DurationVar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>delay<span class="token punctuation">,</span> <span class="token string">&quot;delay&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;\u65F6\u95F4\u95F4\u9694&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flag-parse" tabindex="-1"><a class="header-anchor" href="#flag-parse" aria-hidden="true">#</a> flag.Parse()</h3><p>\u901A\u8FC7\u4EE5\u4E0A\u4E24\u79CD\u65B9\u6CD5\u5B9A\u4E49\u597D\u547D\u4EE4\u884Cflag\u53C2\u6570\u540E\uFF0C\u9700\u8981\u901A\u8FC7\u8C03\u7528<code>flag.Parse()</code>\u6765\u5BF9\u547D\u4EE4\u884C\u53C2\u6570\u8FDB\u884C\u89E3\u6790\u3002</p><p>\u652F\u6301\u7684\u547D\u4EE4\u884C\u53C2\u6570\u683C\u5F0F\u6709\u4EE5\u4E0B\u51E0\u79CD\uFF1A</p><ul><li><code>-flag xxx</code> \uFF08\u4F7F\u7528\u7A7A\u683C\uFF0C\u4E00\u4E2A<code>-</code>\u7B26\u53F7\uFF09</li><li><code>--flag xxx</code> \uFF08\u4F7F\u7528\u7A7A\u683C\uFF0C\u4E24\u4E2A<code>-</code>\u7B26\u53F7\uFF09</li><li><code>-flag=xxx</code> \uFF08\u4F7F\u7528\u7B49\u53F7\uFF0C\u4E00\u4E2A<code>-</code>\u7B26\u53F7\uFF09</li><li><code>--flag=xxx</code> \uFF08\u4F7F\u7528\u7B49\u53F7\uFF0C\u4E24\u4E2A<code>-</code>\u7B26\u53F7\uFF09</li></ul><p>\u5176\u4E2D\uFF0C\u5E03\u5C14\u7C7B\u578B\u7684\u53C2\u6570\u5FC5\u987B\u4F7F\u7528\u7B49\u53F7\u7684\u65B9\u5F0F\u6307\u5B9A\u3002</p><p><code>Parse</code>\u89E3\u6790<code>os.Args[1:]</code>\u4E2D\u7684\u547D\u4EE4\u884C\u6807\u5FD7\u3002\u5FC5\u987B\u5728\u5B9A\u4E49\u6240\u6709\u6807\u5FD7\u4E4B\u540E\u548C\u5728\u7A0B\u5E8F\u8BBF\u95EE\u6807\u5FD7\u4E4B\u524D\u8C03\u7528\u3002</p><h3 id="else" tabindex="-1"><a class="header-anchor" href="#else" aria-hidden="true">#</a> else</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>flag<span class="token punctuation">.</span><span class="token function">Args</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">////\u8FD4\u56DE\u547D\u4EE4\u884C\u53C2\u6570\u540E\u7684\u5176\u4ED6\u53C2\u6570\uFF0C\u4EE5[]string\u7C7B\u578B</span>
flag<span class="token punctuation">.</span><span class="token function">NArg</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//\u8FD4\u56DE\u547D\u4EE4\u884C\u53C2\u6570\u540E\u7684\u5176\u4ED6\u53C2\u6570\u4E2A\u6570</span>
flag<span class="token punctuation">.</span><span class="token function">NFlag</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u8FD4\u56DE\u4F7F\u7528\u7684\u547D\u4EE4\u884C\u53C2\u6570\u4E2A\u6570</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u83B7\u53D6\u547D\u4EE4\u884C\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u547D\u4EE4\u884C\u53C2\u6570" aria-hidden="true">#</a> \u83B7\u53D6\u547D\u4EE4\u884C\u53C2\u6570</h2><p>\u{1F4A1}\u7B80\u5355\u7684\u4E00\u4E2A\u6848\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">/*
\u5B9E\u73B0ping\u64CD\u4F5C
*/</span>

<span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;flag&quot;</span>
	<span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">var</span> <span class="token punctuation">(</span>
	timeout <span class="token builtin">int64</span>
	size    <span class="token builtin">int</span>
	count   <span class="token builtin">int</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">getCommandArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>timeout<span class="token punctuation">,</span> size<span class="token punctuation">,</span> count<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">getCommandArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//\u83B7\u53D6\u547D\u4EE4\u884C\u53C2\u6570</span>
	flag<span class="token punctuation">.</span><span class="token function">Int64Var</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>timeout<span class="token punctuation">,</span> <span class="token string">&quot;t&quot;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token string">&quot;\u8BF7\u6C42\u8D85\u65F6\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2&quot;</span><span class="token punctuation">)</span>
	flag<span class="token punctuation">.</span><span class="token function">IntVar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>size<span class="token punctuation">,</span> <span class="token string">&quot;s&quot;</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token string">&quot;\u8BF7\u6C42\u6570\u636E\u5305\u5927\u5C0F\uFF0C\u5355\u4F4D\u5B57\u8282&quot;</span><span class="token punctuation">)</span>
	flag<span class="token punctuation">.</span><span class="token function">IntVar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>count<span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&quot;\u8BF7\u6C42\u6B21\u6570&quot;</span><span class="token punctuation">)</span>
	flag<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u89E3\u6790\u547D\u4EE4\u884C\u53C2\u6570</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u{1F680} \u7F16\u8BD1\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>PS D:<span class="token punctuation">\\</span>go-super<span class="token operator">&gt;</span> go run  .<span class="token punctuation">\\</span><span class="token number">73</span>-main.go               
<span class="token number">1000</span> <span class="token number">32</span> <span class="token number">4</span>
PS D:<span class="token punctuation">\\</span>go-super<span class="token operator">&gt;</span> go run  .<span class="token punctuation">\\</span><span class="token number">73</span>-main.go <span class="token parameter variable">-t</span> <span class="token number">1234</span> <span class="token parameter variable">-s</span> <span class="token number">128</span> <span class="token parameter variable">-c</span> <span class="token number">6</span>
<span class="token number">1234</span> <span class="token number">128</span> <span class="token number">6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u83B7\u53D6\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u8BF7\u6C42" aria-hidden="true">#</a> \u83B7\u53D6\u8BF7\u6C42</h2><p><strong>\u6CE8\u610F\u5927\u5C0F\u7AEF\u533A\u522B\uFF1A</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">/*
\u5B9E\u73B0ping\u64CD\u4F5C
*/</span>

<span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;bytes&quot;</span>
	<span class="token string">&quot;encoding/binary&quot;</span>
	<span class="token string">&quot;flag&quot;</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;net&quot;</span>
	<span class="token string">&quot;os&quot;</span>
	<span class="token string">&quot;time&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> ICMP <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Type     <span class="token builtin">uint8</span>  <span class="token comment">//\u6D88\u606F\u7C7B\u578B</span>
	Code     <span class="token builtin">uint8</span>  <span class="token comment">//\u7C7B\u578B\u5B50\u7801</span>
	Checksum <span class="token builtin">uint16</span> <span class="token comment">//\u6821\u9A8C\u548C</span>
	<span class="token comment">//\u6807\u8BC6\u7B26\u548C\u5E8F\u5217\u53F7</span>
	ID  <span class="token builtin">uint16</span> <span class="token comment">//\u6807\u8BC6\u7B26</span>
	Seq <span class="token builtin">uint16</span> <span class="token comment">//\u5E8F\u5217\u53F7</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> <span class="token punctuation">(</span>
	timeout <span class="token builtin">int64</span>
	size    <span class="token builtin">int</span>
	count   <span class="token builtin">int</span>
	icmp    <span class="token operator">*</span>ICMP <span class="token operator">=</span> <span class="token operator">&amp;</span>ICMP<span class="token punctuation">{</span>
		Type<span class="token punctuation">:</span>     <span class="token number">8</span><span class="token punctuation">,</span>
		Code<span class="token punctuation">:</span>     <span class="token number">0</span><span class="token punctuation">,</span>
		Checksum<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
		ID<span class="token punctuation">:</span>       <span class="token number">6</span><span class="token punctuation">,</span>
		Seq<span class="token punctuation">:</span>      <span class="token number">0</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">getCommandArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token comment">//\u76EE\u6807ip\u5730\u5740</span>
	desIp <span class="token operator">:=</span> os<span class="token punctuation">.</span>Args<span class="token punctuation">[</span><span class="token function">len</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Args<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">//\u83B7\u53D6\u6700\u540E\u4E00\u4E2A\u53C2\u6570</span>

	<span class="token comment">//\u6784\u5EFA\u8BF7\u6C42</span>
	conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">DialTimeout</span><span class="token punctuation">(</span><span class="token string">&quot;ip4:icmp&quot;</span><span class="token punctuation">,</span> desIp<span class="token punctuation">,</span> time<span class="token punctuation">.</span><span class="token function">Duration</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Millisecond<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u6C42\u5931\u8D25&quot;</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	data <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> size<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6B63\u5728 Ping&quot;</span><span class="token punctuation">,</span> desIp<span class="token punctuation">,</span> <span class="token string">&quot; \u5177\u6709 32 \u5B57\u8282\u7684\u6570\u636E:&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;data:&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>

	<span class="token keyword">var</span> buffer bytes<span class="token punctuation">.</span>Buffer
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5927\u7AEF\uFF1A&quot;</span><span class="token punctuation">)</span>
	binary<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>buffer<span class="token punctuation">,</span> binary<span class="token punctuation">.</span>BigEndian<span class="token punctuation">,</span> <span class="token operator">&amp;</span>icmp<span class="token punctuation">)</span> <span class="token comment">//\u5199\u5165\u7C7B\u578B</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;icmp:&quot;</span><span class="token punctuation">,</span> icmp<span class="token punctuation">)</span>

	<span class="token keyword">var</span> buffer2 bytes<span class="token punctuation">.</span>Buffer
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5C0F\u7AEF\uFF1A&quot;</span><span class="token punctuation">)</span>
	binary<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>buffer2<span class="token punctuation">,</span> binary<span class="token punctuation">.</span>LittleEndian<span class="token punctuation">,</span> <span class="token operator">&amp;</span>icmp<span class="token punctuation">)</span> <span class="token comment">//\u5199\u5165\u7C7B\u578B</span>
	<span class="token comment">/*
		binary.BigEndian: \u5927\u7AEF\u5E8F
		binary.LittleEndian: \u5C0F\u7AEF\u5E8F
	*/</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;icmp:&quot;</span><span class="token punctuation">,</span> icmp<span class="token punctuation">)</span>

	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> conn<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53D1\u9001\u5931\u8D25&quot;</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
		<span class="token comment">//\u8BBE\u7F6E\u8D85\u65F6\u65F6\u95F4</span>
		conn<span class="token punctuation">.</span><span class="token function">SetReadDeadline</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Duration</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Millisecond<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u63A5\u6536\u5931\u8D25&quot;</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u63A5\u6536\u6210\u529F&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">getCommandArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//\u83B7\u53D6\u547D\u4EE4\u884C\u53C2\u6570</span>
	flag<span class="token punctuation">.</span><span class="token function">Int64Var</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>timeout<span class="token punctuation">,</span> <span class="token string">&quot;t&quot;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token string">&quot;\u8BF7\u6C42\u8D85\u65F6\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2&quot;</span><span class="token punctuation">)</span>
	flag<span class="token punctuation">.</span><span class="token function">IntVar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>size<span class="token punctuation">,</span> <span class="token string">&quot;s&quot;</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token string">&quot;\u8BF7\u6C42\u6570\u636E\u5305\u5927\u5C0F\uFF0C\u5355\u4F4D\u5B57\u8282&quot;</span><span class="token punctuation">)</span>
	flag<span class="token punctuation">.</span><span class="token function">IntVar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>count<span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&quot;\u8BF7\u6C42\u6B21\u6570&quot;</span><span class="token punctuation">)</span>
	flag<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u89E3\u6790\u547D\u4EE4\u884C\u53C2\u6570</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u{1F680} \u7F16\u8BD1\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ go run  73-main.go -t 128 -s 36 -c 6 www.baidu.com
\u6B63\u5728 Ping www.baidu.com  \u5177\u6709 32 \u5B57\u8282\u7684\u6570\u636E: data: [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
\u5927\u7AEF\uFF1Aicmp: &amp;{8 0 0 1 1}
\u5C0F\u7AEF\uFF1Aicmp: &amp;{8 0 0 1 1}
\u53D1\u9001\u5931\u8D25
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6821\u9A8C\uFF1A</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">Checksum</span><span class="token punctuation">(</span>data <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token builtin">uint16</span> <span class="token punctuation">{</span> <span class="token comment">//\u5B9A\u4E49\u6821\u9A8C\u548C\u51FD\u6570\uFF1A\u53C2\u6570\u4E3A\u5B57\u8282\u5207\u7247\uFF0C\u8FD4\u56DE\u503C\u4E3Auint16</span>
	<span class="token keyword">var</span> sum <span class="token builtin">uint32</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">2</span> <span class="token punctuation">{</span> <span class="token comment">//\u6BCF\u6B21\u53D6\u4E24\u4E2A\u5B57\u8282</span>
		sum <span class="token operator">+=</span> <span class="token function">uint32</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span> <span class="token operator">+</span> <span class="token function">uint32</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//\u5C06\u6BCF\u4E24\u4E2A\u5B57\u8282\u8F6C\u6362\u4E3Auint16\u7C7B\u578B\uFF0C\u7136\u540E\u76F8\u52A0</span>
	<span class="token punctuation">}</span>
	sum <span class="token operator">=</span> <span class="token punctuation">(</span>sum <span class="token operator">&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>sum <span class="token operator">&amp;</span> <span class="token number">0xffff</span><span class="token punctuation">)</span> <span class="token comment">//\u9AD816\u4F4D\u4E0E\u4F4E16\u4F4D\u76F8\u52A0</span>
	sum <span class="token operator">+=</span> sum <span class="token operator">&gt;&gt;</span> <span class="token number">16</span>                   <span class="token comment">//\u5C06\u8FDB\u4F4D\u76841\u52A0\u5230\u4F4E16\u4F4D</span>
	<span class="token keyword">return</span> <span class="token function">uint16</span><span class="token punctuation">(</span><span class="token operator">^</span>sum<span class="token punctuation">)</span>                <span class="token comment">//\u53D6\u53CD</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u6848\u4F8B" aria-hidden="true">#</a> \u6848\u4F8B</h2><p>\u{1F4A1}\u7B80\u5355\u7684\u4E00\u4E2A\u6848\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;bytes&quot;</span>
	<span class="token string">&quot;encoding/binary&quot;</span>
	<span class="token string">&quot;flag&quot;</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;log&quot;</span>
	<span class="token string">&quot;math&quot;</span>
	<span class="token string">&quot;net&quot;</span>
	<span class="token string">&quot;os&quot;</span>
	<span class="token string">&quot;time&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> ICMP <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Type        <span class="token builtin">uint8</span>
	Code        <span class="token builtin">uint8</span>
	Checksum    <span class="token builtin">uint16</span>
	Identifier  <span class="token builtin">uint16</span>
	SequenceNum <span class="token builtin">uint16</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> <span class="token punctuation">(</span>
	icmp    ICMP
	laddr   <span class="token operator">=</span> net<span class="token punctuation">.</span>IPAddr<span class="token punctuation">{</span>IP<span class="token punctuation">:</span> net<span class="token punctuation">.</span><span class="token function">ParseIP</span><span class="token punctuation">(</span><span class="token string">&quot;ip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
	num     <span class="token builtin">int</span>
	timeout <span class="token builtin">int64</span>
	size    <span class="token builtin">int</span>
	stop    <span class="token builtin">bool</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">ParseArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	args <span class="token operator">:=</span> os<span class="token punctuation">.</span>Args

	<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token punctuation">{</span> <span class="token comment">// \u6CA1\u6709\u8F93\u5165\u4E3B\u673A\u5730\u5740</span>
		<span class="token function">Usage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	desIp <span class="token operator">:=</span> args<span class="token punctuation">[</span><span class="token function">len</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>

	conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">DialTimeout</span><span class="token punctuation">(</span><span class="token string">&quot;ip:icmp&quot;</span><span class="token punctuation">,</span> desIp<span class="token punctuation">,</span> time<span class="token punctuation">.</span><span class="token function">Duration</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Millisecond<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token comment">//icmp\u5934\u90E8\u586B\u5145</span>
	icmp<span class="token punctuation">.</span>Type <span class="token operator">=</span> <span class="token number">8</span>
	icmp<span class="token punctuation">.</span>Code <span class="token operator">=</span> <span class="token number">0</span>
	icmp<span class="token punctuation">.</span>Checksum <span class="token operator">=</span> <span class="token number">0</span>
	icmp<span class="token punctuation">.</span>Identifier <span class="token operator">=</span> <span class="token number">1</span>
	icmp<span class="token punctuation">.</span>SequenceNum <span class="token operator">=</span> <span class="token number">1</span>

	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n\u6B63\u5728 ping %s \u5177\u6709 %d \u5B57\u8282\u7684\u6570\u636E:\\n&quot;</span><span class="token punctuation">,</span> desIp<span class="token punctuation">,</span> size<span class="token punctuation">)</span>

	<span class="token keyword">var</span> buffer bytes<span class="token punctuation">.</span>Buffer
	binary<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>buffer<span class="token punctuation">,</span> binary<span class="token punctuation">.</span>BigEndian<span class="token punctuation">,</span> icmp<span class="token punctuation">)</span> <span class="token comment">// \u4EE5\u5927\u7AEF\u6A21\u5F0F\u5199\u5165</span>
	data <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> size<span class="token punctuation">)</span>                    <span class="token comment">//</span>
	buffer<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
	data <span class="token operator">=</span> buffer<span class="token punctuation">.</span><span class="token function">Bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token keyword">var</span> SuccessTimes <span class="token builtin">int</span> <span class="token comment">// \u6210\u529F\u6B21\u6570</span>
	<span class="token keyword">var</span> FailTimes <span class="token builtin">int</span>    <span class="token comment">// \u5931\u8D25\u6B21\u6570</span>
	<span class="token keyword">var</span> minTime <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token function">int</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>MaxInt32<span class="token punctuation">)</span>
	<span class="token keyword">var</span> maxTime <span class="token builtin">int</span>
	<span class="token keyword">var</span> totalTime <span class="token builtin">int</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		icmp<span class="token punctuation">.</span>SequenceNum <span class="token operator">=</span> <span class="token function">uint16</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
		<span class="token comment">// \u68C0\u9A8C\u548C\u8BBE\u4E3A0</span>
		data<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">byte</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
		data<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">byte</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

		data<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">byte</span><span class="token punctuation">(</span>icmp<span class="token punctuation">.</span>SequenceNum <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span>
		data<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">byte</span><span class="token punctuation">(</span>icmp<span class="token punctuation">.</span>SequenceNum<span class="token punctuation">)</span>
		icmp<span class="token punctuation">.</span>Checksum <span class="token operator">=</span> <span class="token function">CheckSum</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
		data<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">byte</span><span class="token punctuation">(</span>icmp<span class="token punctuation">.</span>Checksum <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span>
		data<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">byte</span><span class="token punctuation">(</span>icmp<span class="token punctuation">.</span>Checksum<span class="token punctuation">)</span>

		<span class="token comment">// \u5F00\u59CB\u65F6\u95F4</span>
		t1 <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		conn<span class="token punctuation">.</span><span class="token function">SetDeadline</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Duration</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Duration</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Millisecond<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		n<span class="token punctuation">,</span> err <span class="token operator">:=</span> conn<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		buf <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">65535</span><span class="token punctuation">)</span>
		n<span class="token punctuation">,</span> err <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u6C42\u8D85\u65F6\u3002&quot;</span><span class="token punctuation">)</span>
			FailTimes<span class="token operator">++</span>
			<span class="token keyword">continue</span>
		<span class="token punctuation">}</span>
		et <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Since</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000000</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> minTime <span class="token operator">&gt;</span> et <span class="token punctuation">{</span>
			minTime <span class="token operator">=</span> et
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> maxTime <span class="token operator">&lt;</span> et <span class="token punctuation">{</span>
			maxTime <span class="token operator">=</span> et
		<span class="token punctuation">}</span>
		totalTime <span class="token operator">+=</span> et
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u6765\u81EA %s \u7684\u56DE\u590D: \u5B57\u8282=%d \u65F6\u95F4=%dms TTL=%d\\n&quot;</span><span class="token punctuation">,</span> desIp<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> et<span class="token punctuation">,</span> buf<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
		SuccessTimes<span class="token operator">++</span>
		time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n%s \u7684 Ping \u7EDF\u8BA1\u4FE1\u606F:\\n&quot;</span><span class="token punctuation">,</span> desIp<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;    \u6570\u636E\u5305: \u5DF2\u53D1\u9001 = %d\uFF0C\u5DF2\u63A5\u6536 = %d\uFF0C\u4E22\u5931 = %d (%.2f%% \u4E22\u5931)\uFF0C\\n&quot;</span><span class="token punctuation">,</span> SuccessTimes<span class="token operator">+</span>FailTimes<span class="token punctuation">,</span> SuccessTimes<span class="token punctuation">,</span> FailTimes<span class="token punctuation">,</span> <span class="token function">float64</span><span class="token punctuation">(</span>FailTimes<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">float64</span><span class="token punctuation">(</span>SuccessTimes<span class="token operator">+</span>FailTimes<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> maxTime <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> minTime <span class="token operator">!=</span> <span class="token function">int</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>MaxInt32<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F80\u8FD4\u884C\u7A0B\u7684\u4F30\u8BA1\u65F6\u95F4(\u4EE5\u6BEB\u79D2\u4E3A\u5355\u4F4D):\\n&quot;</span><span class="token punctuation">)</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;    \u6700\u77ED = %dms\uFF0C\u6700\u957F = %dms\uFF0C\u5E73\u5747 = %dms\\n&quot;</span><span class="token punctuation">,</span> minTime<span class="token punctuation">,</span> maxTime<span class="token punctuation">,</span> totalTime<span class="token operator">/</span>SuccessTimes<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">CheckSum</span><span class="token punctuation">(</span>data <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token builtin">uint16</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> sum <span class="token builtin">uint32</span>
	<span class="token keyword">var</span> length <span class="token operator">=</span> <span class="token function">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
	<span class="token keyword">var</span> index <span class="token builtin">int</span>
	<span class="token keyword">for</span> length <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token punctuation">{</span> <span class="token comment">// \u6EA2\u51FA\u90E8\u5206\u76F4\u63A5\u53BB\u9664</span>
		sum <span class="token operator">+=</span> <span class="token function">uint32</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span> <span class="token operator">+</span> <span class="token function">uint32</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
		index <span class="token operator">+=</span> <span class="token number">2</span>
		length <span class="token operator">-=</span> <span class="token number">2</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> length <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>
		sum <span class="token operator">+=</span> <span class="token function">uint32</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// CheckSum\u7684\u503C\u662F16\u4F4D\uFF0C\u8BA1\u7B97\u662F\u5C06\u9AD816\u4F4D\u52A0\u4F4E16\u4F4D\uFF0C\u5F97\u5230\u7684\u7ED3\u679C\u8FDB\u884C\u91CD\u590D\u4EE5\u8BE5\u65B9\u5F0F\u8FDB\u884C\u8BA1\u7B97\uFF0C\u76F4\u5230\u9AD816\u4F4D\u4E3A0</span>
	<span class="token comment">/*
	   sum\u7684\u6700\u5927\u60C5\u51B5\u662F\uFF1Affffffff
	   \u7B2C\u4E00\u6B21\u9AD816\u4F4D+\u4F4E16\u4F4D\uFF1Affff + ffff = 1fffe
	   \u7B2C\u4E8C\u6B21\u9AD816\u4F4D+\u4F4E16\u4F4D\uFF1A0001 + fffe = ffff
	   \u5373\u63A8\u51FA\u4E00\u4E2A\u7ED3\u8BBA\uFF0C\u53EA\u8981\u7B2C\u4E00\u6B21\u9AD816\u4F4D+\u4F4E16\u4F4D\u7684\u7ED3\u679C\uFF0C\u518D\u8FDB\u884C\u4E4B\u524D\u7684\u8BA1\u7B97\u7ED3\u679C\u7528\u5230\u9AD816\u4F4D+\u4F4E16\u4F4D\uFF0C\u5373\u53EF\u5904\u7406\u6EA2\u51FA\u60C5\u51B5
	*/</span>
	sum <span class="token operator">=</span> <span class="token function">uint32</span><span class="token punctuation">(</span>sum<span class="token operator">&gt;&gt;</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">uint32</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span>
	sum <span class="token operator">=</span> <span class="token function">uint32</span><span class="token punctuation">(</span>sum<span class="token operator">&gt;&gt;</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">uint32</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span>
	<span class="token keyword">return</span> <span class="token function">uint16</span><span class="token punctuation">(</span><span class="token operator">^</span>sum<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">ParseArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	flag<span class="token punctuation">.</span><span class="token function">Int64Var</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>timeout<span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span> <span class="token number">1500</span><span class="token punctuation">,</span> <span class="token string">&quot;\u7B49\u5F85\u6BCF\u6B21\u56DE\u590D\u7684\u8D85\u65F6\u65F6\u95F4(\u6BEB\u79D2)&quot;</span><span class="token punctuation">)</span>
	flag<span class="token punctuation">.</span><span class="token function">IntVar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>num<span class="token punctuation">,</span> <span class="token string">&quot;n&quot;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&quot;\u8981\u53D1\u9001\u7684\u8BF7\u6C42\u6570&quot;</span><span class="token punctuation">)</span>
	flag<span class="token punctuation">.</span><span class="token function">IntVar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>size<span class="token punctuation">,</span> <span class="token string">&quot;l&quot;</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token string">&quot;\u8981\u53D1\u9001\u7F13\u51B2\u533A\u5927\u5C0F&quot;</span><span class="token punctuation">)</span>
	flag<span class="token punctuation">.</span><span class="token function">BoolVar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>stop<span class="token punctuation">,</span> <span class="token string">&quot;t&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">&quot;Ping \u6307\u5B9A\u7684\u4E3B\u673A\uFF0C\u76F4\u5230\u505C\u6B62&quot;</span><span class="token punctuation">)</span>

	flag<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">Usage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	argNum <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Args<span class="token punctuation">)</span>
	<span class="token keyword">if</span> argNum <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span>
			<span class="token string">\`
\u7528\u6CD5: ping [-t] [-a] [-n count] [-l size] [-f] [-i TTL] [-v TOS]
            [-r count] [-s count] [[-j host-list] | [-k host-list]]
            [-w timeout] [-R] [-S srcaddr] [-c compartment] [-p]
            [-4] [-6] target_name
\u9009\u9879:
    -t             Ping \u6307\u5B9A\u7684\u4E3B\u673A\uFF0C\u76F4\u5230\u505C\u6B62\u3002
                   \u82E5\u8981\u67E5\u770B\u7EDF\u8BA1\u4FE1\u606F\u5E76\u7EE7\u7EED\u64CD\u4F5C\uFF0C\u8BF7\u952E\u5165 Ctrl+Break\uFF1B
                   \u82E5\u8981\u505C\u6B62\uFF0C\u8BF7\u952E\u5165 Ctrl+C\u3002
    -a             \u5C06\u5730\u5740\u89E3\u6790\u4E3A\u4E3B\u673A\u540D\u3002
    -n count       \u8981\u53D1\u9001\u7684\u56DE\u663E\u8BF7\u6C42\u6570\u3002
    -l size        \u53D1\u9001\u7F13\u51B2\u533A\u5927\u5C0F\u3002
    -f             \u5728\u6570\u636E\u5305\u4E2D\u8BBE\u7F6E\u201C\u4E0D\u5206\u6BB5\u201D\u6807\u8BB0(\u4EC5\u9002\u7528\u4E8E IPv4)\u3002
    -i TTL         \u751F\u5B58\u65F6\u95F4\u3002
    -v TOS         \u670D\u52A1\u7C7B\u578B(\u4EC5\u9002\u7528\u4E8E IPv4\u3002\u8BE5\u8BBE\u7F6E\u5DF2\u88AB\u5F03\u7528\uFF0C
                   \u5BF9 IP \u6807\u5934\u4E2D\u7684\u670D\u52A1\u7C7B\u578B\u5B57\u6BB5\u6CA1\u6709\u4EFB\u4F55
                   \u5F71\u54CD)\u3002
    -r count       \u8BB0\u5F55\u8BA1\u6570\u8DC3\u70B9\u7684\u8DEF\u7531(\u4EC5\u9002\u7528\u4E8E IPv4)\u3002
    -s count       \u8BA1\u6570\u8DC3\u70B9\u7684\u65F6\u95F4\u6233(\u4EC5\u9002\u7528\u4E8E IPv4)\u3002
    -j host-list   \u4E0E\u4E3B\u673A\u5217\u8868\u4E00\u8D77\u4F7F\u7528\u7684\u677E\u6563\u6E90\u8DEF\u7531(\u4EC5\u9002\u7528\u4E8E IPv4)\u3002
    -k host-list    \u4E0E\u4E3B\u673A\u5217\u8868\u4E00\u8D77\u4F7F\u7528\u7684\u4E25\u683C\u6E90\u8DEF\u7531(\u4EC5\u9002\u7528\u4E8E IPv4)\u3002
    -w timeout     \u7B49\u5F85\u6BCF\u6B21\u56DE\u590D\u7684\u8D85\u65F6\u65F6\u95F4(\u6BEB\u79D2)\u3002
    -R             \u540C\u6837\u4F7F\u7528\u8DEF\u7531\u6807\u5934\u6D4B\u8BD5\u53CD\u5411\u8DEF\u7531(\u4EC5\u9002\u7528\u4E8E IPv6)\u3002
                   \u6839\u636E RFC 5095\uFF0C\u5DF2\u5F03\u7528\u6B64\u8DEF\u7531\u6807\u5934\u3002
                   \u5982\u679C\u4F7F\u7528\u6B64\u6807\u5934\uFF0C\u67D0\u4E9B\u7CFB\u7EDF\u53EF\u80FD\u4E22\u5F03
                   \u56DE\u663E\u8BF7\u6C42\u3002
    -S srcaddr     \u8981\u4F7F\u7528\u7684\u6E90\u5730\u5740\u3002
    -c compartment \u8DEF\u7531\u9694\u79BB\u8231\u6807\u8BC6\u7B26\u3002
    -p             Ping Hyper-V \u7F51\u7EDC\u865A\u62DF\u5316\u63D0\u4F9B\u7A0B\u5E8F\u5730\u5740\u3002
    -4             \u5F3A\u5236\u4F7F\u7528 IPv4\u3002
    -6             \u5F3A\u5236\u4F7F\u7528 IPv6\u3002
\`</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u{1F680} \u7F16\u8BD1\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ go run  <span class="token number">76</span>-main.go <span class="token parameter variable">-t</span> <span class="token number">128</span> <span class="token parameter variable">-s</span> <span class="token number">36</span> <span class="token parameter variable">-c</span> <span class="token number">6</span> www.baidu.com     
\u6B63\u5728 <span class="token function">ping</span> www.baidu.com \u5177\u6709 <span class="token number">32</span> \u5B57\u8282\u7684\u6570\u636E:
\u6765\u81EA www.baidu.com \u7684\u56DE\u590D: \u5B57\u8282<span class="token operator">=</span><span class="token number">32</span> \u65F6\u95F4<span class="token operator">=</span>25ms <span class="token assign-left variable">TTL</span><span class="token operator">=</span><span class="token number">55</span>
\u6765\u81EA www.baidu.com \u7684\u56DE\u590D: \u5B57\u8282<span class="token operator">=</span><span class="token number">32</span> \u65F6\u95F4<span class="token operator">=</span>26ms <span class="token assign-left variable">TTL</span><span class="token operator">=</span><span class="token number">55</span>
\u6765\u81EA www.baidu.com \u7684\u56DE\u590D: \u5B57\u8282<span class="token operator">=</span><span class="token number">32</span> \u65F6\u95F4<span class="token operator">=</span>21ms <span class="token assign-left variable">TTL</span><span class="token operator">=</span><span class="token number">55</span>

www.baidu.com \u7684 Ping \u7EDF\u8BA1\u4FE1\u606F:
    \u6570\u636E\u5305: \u5DF2\u53D1\u9001 <span class="token operator">=</span> <span class="token number">4</span>\uFF0C\u5DF2\u63A5\u6536 <span class="token operator">=</span> <span class="token number">4</span>\uFF0C\u4E22\u5931 <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">(</span><span class="token number">0.00</span>% \u4E22\u5931<span class="token punctuation">)</span>\uFF0C
\u5F80\u8FD4\u884C\u7A0B\u7684\u4F30\u8BA1\u65F6\u95F4<span class="token punctuation">(</span>\u4EE5\u6BEB\u79D2\u4E3A\u5355\u4F4D<span class="token punctuation">)</span>:
    \u6700\u77ED <span class="token operator">=</span> 21ms\uFF0C\u6700\u957F <span class="token operator">=</span> 29ms\uFF0C\u5E73\u5747 <span class="token operator">=</span> 25ms
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="end-\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#end-\u94FE\u63A5" aria-hidden="true">#</a> END \u94FE\u63A5</h2>`,51),F=s("\u56DE\u5230\u76EE\u5F55"),G=s("\u4E0A\u4E00\u8282"),W=s("\u4E0B\u4E00\u8282"),H=n("hr",null,null,-1),O={href:"https://github.com/3293172751/Block_Chain/blob/master/Git/git-contributor.md",target:"_blank",rel:"noopener noreferrer"},U=s("\u53C2\u4E0E\u8D21\u732E\u2764\uFE0F\u{1F495}\u{1F495}");function j($,J){const t=o("ExternalLinkIcon"),p=o("RouterLink");return i(),l("div",null,[n("ul",null,[n("li",null,[n("a",k,[d,a(t)])])]),m,n("ul",null,[n("li",null,[a(p,{to:"/go-advancend/"},{default:e(()=>[v]),_:1})]),n("li",null,[a(p,{to:"/go-advancend/markdown/18.html"},{default:e(()=>[b]),_:1})])]),n("blockquote",null,[n("p",null,[g,n("a",f,[h,a(t)])]),n("h3",q,[y,w,n("strong",null,[n("a",_,[x,a(t)])])]),n("h3",P,[I,C,n("strong",null,[n("a",T,[S,a(t)])])])]),M,A,D,V,B,n("div",N,[L,n("ul",null,[n("li",null,[n("a",z,[R,a(t)])])])]),E,n("ul",null,[n("li",null,[a(p,{to:"/go-advancend/"},{default:e(()=>[F]),_:1})]),n("li",null,[a(p,{to:"/go-advancend/markdown/18.html"},{default:e(()=>[G]),_:1})]),n("li",null,[a(p,{to:"/go-advancend/markdown/20.html"},{default:e(()=>[W]),_:1})])]),H,n("ul",null,[n("li",null,[n("a",O,[U,a(t)])])])])}const Q=c(r,[["render",j],["__file","19.html.vue"]]);export{Q as default};
